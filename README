NAME
    imapsync - IMAP synchronisation, sync, copy or migration tool.
    Synchronises mailboxes between two imap servers. Good at IMAP migration.
    More than 66 different IMAP server softwares supported with success, few
    failures.

    $Revision: 1.678 $

SYNOPSIS
     To synchronize the source imap account 
       "test1" on server "test1.lamiral.info" with password "secret1" 
     to the destination imap account 
       "test2" on server "test2.lamiral.info" with password "secret2"
     do:

      imapsync \
       --host1 test1.lamiral.info --user1 test1 --password1 secret1 \
       --host2 test2.lamiral.info --user2 test2 --password2 secret2

INSTALL
     Imapsync works under any Unix with perl.
     Imapsync works under Windows (2000, XP, Vista, Seven) 
     as a standalone binary software called imapsync.exe
     Imapsync works under OS X as a standalone binary 
     software called imapsync_bin_Darwin.

     Purchase latest imapsync at
     http://imapsync.lamiral.info/

     You'll receive a link to a compressed tarball called imapsync-x.xx.tgz
     where x.xx is the version number. Untar the tarball where
     you want (on Unix):

     tar xzvf  imapsync-x.xx.tgz

     Go into the directory imapsync-x.xx and read the INSTALL file.
     As mentioned at http://imapsync.lamiral.info/#install
     the INSTALL file can also be found at 
     http://imapsync.lamiral.info/INSTALL
     It is now split in several files for each system
     http://imapsync.lamiral.info/INSTALL.d/

USAGE
    To get a description of each option just run imapsync with no argument,
    like this:

      imapsync

    This description of options is also available at
    http://imapsync.lamiral.info/OPTIONS and is reproduced here:

     usage: ./imapsync [options]
 
     Several options are mandatory. 
     str means string
     int means integer
     reg means regular expression
     cmd means command
 
     --dry               : Makes imapsync doing nothing, just print what would 
                           be done without --dry.
 
     --host1        str  : Source or "from" imap server. Mandatory.
     --port1        int  : Port to connect on host1. Default is 143, 993 if --ssl1
     --user1        str  : User to login on host1. Mandatory.
     --showpasswords     : Shows passwords on output instead of "MASKED".
                           Useful to restart a complete run by just reading the log.
     --password1    str  : Password for the user1.
     --host2        str  : "destination" imap server. Mandatory.
     --port2        int  : Port to connect on host2. Default is 143, 993 if --ssl2
     --user2        str  : User to login on host2. Mandatory.
     --password2    str  : Password for the user2.
 
     --passfile1    str  : Password file for the user1. It must contain the 
                           password on the first line. This option avoids to show
                           the password on the command line like --password1 does.
     --passfile2    str  : Password file for the user2. Contains the password.
 
     --ssl1              : Use a SSL connection on host1.
     --ssl2              : Use a SSL connection on host2.
     --tls1              : Use a TLS connection on host1.
     --tls2              : Use a TLS connection on host2.
     --debugssl     int  : SSL debug mode from 0 to 4.
 
     --timeout1     int  : Connection timeout in seconds for host1. 
                           Default is 120 and 0 means no timeout at all.
     --timeout2     int  : Connection timeout in seconds for host2. 
                           Default is 120 and 0 means no timeout at all.
 
     --authmech1    str  : Auth mechanism to use with host1:
                           PLAIN, LOGIN, CRAM-MD5 etc. Use UPPERCASE.
     --authmech2    str  : Auth mechanism to use with host2. See --authmech1

     --authuser1    str  : User to auth with on host1 (admin user). 
                           Avoid using --authmech1 SOMETHING with --authuser1.
     --authuser2    str  : User to auth with on host2 (admin user).
     --proxyauth1        : Use proxyauth on host1. Requires --authuser1.
                           Required by Sun/iPlanet/Netscape IMAP servers to
                           be able to use an administrative user.
     --proxyauth2        : Use proxyauth on host2. Requires --authuser2.
 
     --authmd51          : Use MD5 authentification for host1.
     --authmd52          : Use MD5 authentification for host2.
     --domain1      str  : Domain on host1 (NTLM authentication).
     --domain2      str  : Domain on host2 (NTLM authentication).
 
 
     --folder       str  : Sync this folder.
     --folder       str  : and this one, etc.
     --folderrec    str  : Sync this folder recursively.
     --folderrec    str  : and this one, etc.
 
     --folderfirst  str  : Sync this folder first. --folderfirst "Work"
     --folderfirst  str  : then this one, etc.
     --folderlast   str  : Sync this folder last. --folderlast "[Gmail]/All Mail"
     --folderlast   str  : then this one, etc.
 
     --nomixfolders      : Do not merge folders when host1 is case sensitive
                           while host2 is not (like Exchange). Only the first
                           similar folder is synced (ex: Sent SENT sent -> Sent).
 
     --skipemptyfolders  : Empty host1 folders are not created on host2.

     --f1f2    str1=str2 : Force folder str1 to be synced to str2.
     --include      reg  : Sync folders matching this regular expression
     --include      reg  : or this one, etc.
                           in case both --include --exclude options are
                           use, include is done before.
     --exclude      reg  : Skips folders matching this regular expression
                           Several folders to avoid:
                            --exclude 'fold1|fold2|f3' skips fold1, fold2 and f3.
     --exclude      reg  : or this one, etc.
 
     --subfolder2   str  : Move whole host1 folders hierarchy under this 
                           host2 folder  str    .
                           It does it by adding two --regextrans2 options before
                           all others. Add --debug to see what's really going on.
 
     --regextrans2  reg  : Apply the whole regex to each destination folders.
     --regextrans2  reg  : and this one. etc.
                           When you play with the --regextrans2 option, first
                           add also the safe options --dry --justfolders
                           Then, when happy, remove --dry, remove --justfolders.
                           Have in mind that --regextrans2 is applied after prefix
                           and separator inversion.
 
     --tmpdir       str  : Where to store temporary files and subdirectories.
                           Will be created if it doesn't exist.
                           Default is system specific, Unix is /tmp but
                           it's often small and deleted at reboot.
                           --tmpdir /var/tmp should be better.
     --pidfile      str  : The file where imapsync pid is written.
     --pidfilelocking    : Abort if pidfile already exists. Usefull to avoid 
                           concurrent transfers on the same mailbox.
 
     --nolog             : Turn off logging on file
     --logfile      str  : Change the default log filename (can be dirname/filename).
     --logdir       str  : Change the default log directory. Default is LOG_imapsync

     --prefix1      str  : Remove prefix to all destination folders 
                           (usually INBOX. or INBOX/ or an empty string "")
                           you have to use --prefix1 if host1 imap server
                           does not have NAMESPACE capability, so imapsync
                           suggests to use it. All other cases are bad.
     --prefix2      str  : Add prefix to all host2 folders. See --prefix1
     --sep1         str  : Host1 separator in case NAMESPACE is not supported.
     --sep2         str  : Host2 separator in case NAMESPACE is not supported.
 
     --skipmess     reg  : Skips messages maching the regex.
                           Example: 'm/[\x80-ff]/' # to avoid 8bits messages.
                           --skipmess is applied before --regexmess
     --skipmess     reg  : or this one, etc.

     --pipemess     cmd  : Apply this cmd command to each message content 
                           before the copy.
     --pipemess     cmd  : and this one, etc.
                          
     --disarmreadreceipts : Disarms read receipts (host2 Exchange issue)

     --regexmess    reg  : Apply the whole regex to each message before transfer.
                           Example: 's/\000/ /g' # to replace null by space.
     --regexmess    reg  : and this one, etc.

     --regexflag    reg  : Apply the whole regex to each flags list.
                           Example: 's/"Junk"//g' # to remove "Junk" flag.
     --regexflag    reg  : and this one, etc.
 
     --delete            : Deletes messages on host1 server after a successful 
                           transfer. Option --delete has the following behavior: 
                           it marks messages as deleted with the IMAP flag 
                           \Deleted, then messages are really deleted with an 
                           EXPUNGE IMAP command.

     --delete2           : Delete messages in host2 that are not in
                           host1 server. Useful for backup or pre-sync.
     --delete2duplicates : Delete messages in host2 that are duplicates.
                           Works only without --useuid since duplicates are 
                           detected with an header part of each message.

     --delete2folders    : Delete folders in host2 that are not in host1 server. 
                           For safety, first try it like this (it is safe):
                           --delete2folders --dry --justfolders --nofoldersizes
     --delete2foldersonly   reg : Deleted only folders matching regex.
                                  Example: --delete2foldersonly "/^Junk$|^INBOX.Junk$/"
     --delete2foldersbutnot reg : Do not delete folders matching regex.
                                  Example: --delete2foldersbutnot "/Tasks$|Contacts$|Foo$/"
     --noexpunge         : Do not expunge messages on host1.
                           Expunge really deletes messages marked deleted.
                           Expunge is made at the beginning, on host1 only. 
                           Newly transferred messages are also expunged if 
                           option --delete is given.
                           No expunge is done on host2 account (unless --expunge2)
     --expunge1          : Expunge messages on host1 after messages transfer.
     --expunge2          : Expunge messages on host2 after messages transfer.
     --uidexpunge2       : uidexpunge messages on the host2 account
                           that are not on the host1 account, requires --delete2
     --nomixfolders      : Avoid merging folders that are considered different on
                           host1 but the same on destination host2 because of 
                           case sensitivities and insensitivities.
 
     --syncinternaldates : Sets the internal dates on host2 same as host1.
                           Turned on by default. Internal date is the date
                           a message arrived on a host (mtime).
     --idatefromheader   : Sets the internal dates on host2 same as the 
                           "Date:" headers.

     --maxsize      int  : Skip messages larger  (or equal) than  int  bytes
     --minsize      int  : Skip messages smaller (or equal) than  int  bytes
     --maxage       int  : Skip messages older than  int  days.
                           final stats (skipped) don't count older messages
                           see also --minage
     --minage       int  : Skip messages newer than  int  days.
                           final stats (skipped) don't count newer messages
                           You can do (+ are the messages selected):
                           past|----maxage+++++++++++++++>now
                           past|+++++++++++++++minage---->now
                           past|----maxage+++++minage---->now (intersection)
                           past|++++minage-----maxage++++>now (union)
 
     --search       str  : Selects only messages returned by this IMAP SEARCH 
                           command. Applied on both sides.
     --search1      str  : Same as --search for selecting host1 messages only.
     --search2      str  : Same as --search for selecting host2 messages only.
                           --search CRIT equals --search1 CRIT --search2 CRIT
 
     --exitwhenover int  : Stop syncing when total bytes transferred reached.
                           Gmail per day allows 
                           2500000000 = 2.5 GB downloaded from Gmail as host2
                            500000000 = 500 MB uploaded to Gmail as host1.
 
     --maxlinelength int : skip messages with a line length longer than  int  bytes.
                           RFC 2822 says it must be no more than 1000 bytes.

     --useheader    str  : Use this header to compare messages on both sides.
                           Ex: Message-ID or Subject or Date.
     --useheader    str    and this one, etc.
 
     --subscribed        : Transfers subscribed folders.
     --subscribe         : Subscribe to the folders transferred on the 
                           host2 that are subscribed on host1. On by default.
     --subscribeall      : Subscribe to the folders transferred on the 
                           host2 even if they are not subscribed on host1.
 
     --nofoldersizes     : Do not calculate the size of each folder in bytes
                           and message counts. Default is to calculate them.
     --nofoldersizesatend: Do not calculate the size of each folder in bytes
                           and message counts at the end. Default is on.
     --justfoldersizes   : Exit after having printed the folder sizes.
 
     --syncacls          : Synchronises acls (Access Control Lists).
     --nosyncacls        : Does not synchronize acls. This is the default.
                           Acls in IMAP are not standardized, be careful.
 
     --usecache          : Use cache to speedup.
     --nousecache        : Do not use cache. Caveat: --useuid --nousecache creates
                           duplicates on multiple runs.
     --useuid            : Use uid instead of header as a criterium to recognize 
                           messages. Option --usecache is then implied unless 
                           --nousecache is used.  
 
     --debug             : Debug mode.
     --debugfolders      : Debug mode for the folders part only.
     --debugcontent      : Debug content of the messages transfered. Huge ouput.
     --debugflags        : Debug mode for flags.
     --debugimap1        : IMAP debug mode for host1. Very verbose.
     --debugimap2        : IMAP debug mode for host2. Very verbose.
     --debugimap         : IMAP debug mode for host1 and host2.
     --debugmemory       : Debug mode showing memory consumption after each copy.

     --errorsmax     int : Exit when int number of errors is reached. Default is 50.

     --tests             : Run local non-regression tests. Exit code 0 means all ok.
     --testslive         : Run a live test with test1.lamiral.info imap server. 
                           Useful to check the basics. Needs internet connexion.

     --version           : Print only software version.
     --noreleasecheck    : Do not check for new imapsync release (a http request).
     --releasecheck      : Check for new imapsync release (a http request).
     --noid              : Do not send/receive ID command to imap servers.
     --justconnect       : Just connect to both servers and print useful
                           information. Need only --host1 and --host2 options.
     --justlogin         : Just login to both host1 and host2 with users 
                           credentials, then exit.
     --justfolders       : Do only things about folders (ignore messages).

     --help              : print this help.

     Example: 
     To synchronize the source imap account 
       "test1" on server "test1.lamiral.info" with password "secret1" 
     to the destination imap account 
       "test2" on server "test2.lamiral.info" with password "secret2"
     do:
  
     imapsync \
        --host1 test1.lamiral.info --user1 test1 --password1 secret1 \
        --host2 test2.lamiral.info --user2 test2 --password2 secret2

DESCRIPTION
    Imapsync command is a tool allowing incremental and recursive imap
    transfers from one mailbox to another.

    By default all folders are transferred, recursively, all possible flags
    (\Seen \Answered \Flagged etc.) are synced too.

    We sometimes need to transfer mailboxes from one imap server to another.
    This is called migration.

    Imapsync reduces the amount of data transferred by not transferring a
    given message if it resides already on both sides. Same specific headers
    and the transfer is done only once; taken into account are by default
    Message-Id and Received header lines. All flags are preserved, unread
    will stay unread, read will stay read, deleted will stay deleted. You
    can stop the transfer at any time and restart it later, imapsync works
    well with bad connections and interruptions.

    You can decide to delete the messages from the source mailbox after a
    successful transfer, it can be a good feature when migrating live
    mailboxes since messages will be only on one side. In that case, use the
    --delete option. Option --delete implies also option --expunge so all
    messages marked deleted on host1 will be really deleted. (you can use
    --noexpunge to avoid this but I don't see any good real world scenario
    for the combination --delete --noexpunge).

    A different scenario is synchronizing a mailbox B from another mailbox A
    in case you just want to keep a "live" copy of A in B. In that case
    --delete2 has to be used, it deletes messages in host2 folder B that are
    not in host1 folder A. If you also need to destroy host2 folders that
    are not in host1 then use --delete2folders (see also
    --delete2foldersonly and --delete2foldersbutnot).

    Imapsync is not adequate for maintaining two active imap accounts in
    synchronization when the user plays independently on both sides. Use
    offlineimap (written by John Goerzen) or mbsync (written by Michael R.
    Elkins) for 2 ways synchronizations.

OPTIONS
    To get a description of each option just invoke:

      imapsync

    or read http://imapsync.lamiral.info/OPTIONS

HISTORY
    I wrote imapsync because an enterprise (basystemes) paid me to install a
    new imap server without losing huge old mailboxes located on a far away
    remote imap server accessible by a low bandwidth link. The tool imapcp
    (written in python) could not help me because I had to verify every
    mailbox was well transferred and delete it after a good transfer.
    imapsync started its life as a copy_folder.pl patch. The tool
    copy_folder.pl comes from the Mail-IMAPClient-2.1.3 perl module tarball
    source (in the examples/ directory of the tarball).

EXAMPLE
    While working on imapsync parameters please run imapsync in dry mode (no
    modification induced) with the --dry option. Nothing bad can be done
    this way.

    To synchronize the imap account "buddy" (with password "secret1") on
    host "imap.src.fr" to the imap account "max" (with password "secret2")
    on host "imap.dest.fr":

     imapsync --host1 imap.src.fr  --user1 buddy --password1 secret1 \
              --host2 imap.dest.fr --user2 max   --password2 secret2

    Then you will have max's mailbox updated from buddy's mailbox.

SECURITY
    You can use --passfile1 instead of --password1 to give the password
    since it is safer. With --password1 option any user on your host can see
    the password by using the 'ps auxwwww' command. Using a variable (like
    $PASSWORD1) is also dangerous because of the 'ps auxwwwwe' command. So,
    saving the password in a well protected file (600 or rw-------) is the
    best solution.

    imasync is not totally protected against sniffers on the network since
    passwords may be transferred in plain text if CRAM-MD5 is not supported
    by your imap servers. Use --ssl1 (or --tls1) and --ssl2 (or --tls2) to
    enable encryption on host1 and host2.

    You may authenticate as one user (typically an admin user), but be
    authorized as someone else, which means you don't need to know every
    user's personal password. Specify --authuser1 "adminuser" to enable this
    on host1. In this case, --authmech1 PLAIN will be used by default since
    it is the only way to go for now. So don't use --authmech1 SOMETHING
    with --authuser1 "adminuser", it will not work. Same behavior with the
    --authuser2 option. Authenticate with an admin account must be supported
    by your imap server to work with imapsync.

    When working on Sun/iPlanet/Netscape IMAP servers you must use
    --proxyauth1 to enable administrative user to masquerade as another
    user. Can also be used on destination server with --proxyauth2

    You can authenticate with OAUTH when transfering from Google Apps. The
    consumer key will be the domain part of the --user, and the --password
    will be used as the consumer secret. It does not work with Google Apps
    free edition.

EXIT STATUS
    imapsync will exit with a 0 status (return code) if everything went
    good. Otherwise, it exits with a non-zero status.

    So if you have an unreliable internet connection, you can use this loop
    in a Bourne shell:

            while ! imapsync ...; do 
                  echo imapsync not complete
            done

LICENSE
    imapsync is free, open, public but not always gratis software cover by
    the NOLIMIT Public License. See the LICENSE file included in the
    distribution or just read this simple sentence as it is the licence
    text: No limit to do anything with this work and this license.

MAILING-LIST
    The public mailing-list may be the best way to get free support.

    To write on the mailing-list, the address is:
    <imapsync@linux-france.org>

    To subscribe, send any message (even empty) to:
    <imapsync-subscribe@listes.linux-france.org> then just reply to the
    confirmation message.

    To unsubscribe, send a message to:
    <imapsync-unsubscribe@listes.linux-france.org>

    To contact the person in charge for the list:
    <imapsync-request@listes.linux-france.org>

    The list archives are available at:
    http://www.linux-france.org/prj/imapsync_list/ So consider that the list
    is public, anyone can see your post. Use a pseudonym or do not post to
    this list if you want to stay private.

    Thank you for your participation.

AUTHOR
    Gilles LAMIRAL <gilles.lamiral@laposte.net>

    Feedback good or bad is very often welcome.

    Gilles LAMIRAL earns his living by writing, installing, configuring and
    teaching free, open and often gratis softwares. It used to be "always
    gratis" but now it is "often" because imapsync is sold by its author, a
    good way to stay maintening and supporting free open public softwares
    (see the license) over decades.

BUG REPORT GUIDELINES
    Help me to help you: follow the following guidelines.

    Report any bugs or feature requests to the public mailing-list or to the
    author.

    Before reporting bugs, read the FAQ, the README and the TODO files.
    http://imapsync.lamiral.info/

    Upgrade to last imapsync release, maybe the bug is already fixed.

    Upgrade to last Mail-IMAPClient Perl module.
    http://search.cpan.org/dist/Mail-IMAPClient/ maybe the bug is already
    fixed there.

    Make a good title with word "imapsync" in it (my spam filters won't
    filter it), Try to write an email title with more words than just
    "imapsync" or "problem", a good title is made of keywords summary, but
    not too long (one visible line).

    Help us to help you: in your report, please include:

     - imapsync version.

     - output near the first failures, a few lines before is good to get the context
       of the issue. First failures messages are often more significant than 
       the last ones. 
 
     - if the issue is always related to the same messages, include the output 
       with --debug --debugimap, near the failure point. For example,
       Isolate a buggy message or two in a folder 'BUG' and use 

         imapsync ... --folder 'BUG' --debug --debugimap 

     - imap server softwares on both sides and their version number.

     - imapsync with all the options you use,  the full command line
       you use (except the passwords of course). 

     - IMAPClient.pm version.

     - the run context. Do you run imapsync.exe, a unix binary 
       or the perl script imapsync.

     - operating system running imapsync.

     - virtual software context (vmware, xen etc.)

     - operating systems on both sides and the third side in case
       you run imapsync on a foreign host from the both.

    Most of those values can be found as a copy/paste at the begining of the
    output, so a carbon copy of the output is a very easy and very good
    debug report for me.

    One time in your life, read the paper "How To Ask Questions The Smart
    Way" http://www.catb.org/~esr/faqs/smart-questions.html and then forget
    it.

IMAP SERVERS
    See http://imapsync.lamiral.info/S/imapservers.shtml

HUGE MIGRATION
    Pay special attention to options --subscribed --subscribe --delete
    --delete2 --delete2folders --maxage --minage --maxsize --useuid
    --usecache

    If you have many mailboxes to migrate think about a little shell
    program. Write a file called file.txt (for example) containing users and
    passwords. The separator used in this example is ';'

    The file.txt file contains:

    user001_1;password001_1;user001_2;password001_2
    user002_1;password002_1;user002_2;password002_2
    user003_1;password003_1;user003_2;password003_2
    user004_1;password004_1;user004_2;password004_2
    user005_1;password005_1;user005_2;password005_2 ...

    On Unix the shell program can be:

     { while IFS=';' read  u1 p1 u2 p2; do 
            imapsync --host1 imap.side1.org --user1 "$u1" --password1 "$p1" \
                     --host2 imap.side2.org --user2 "$u2" --password2 "$p2" ...
     done ; } < file.txt

    On Windows the batch program can be:

      FOR /F "tokens=1,2,3,4 delims=; eol=#" %%G IN (file.txt) DO imapsync ^
      --host1 imap.side1.org --user1 %%G --password1 %%H ^
      --host2 imap.side2.org --user2 %%I --password2 %%J ...

    The ... have to be replaced by nothing or any imapsync option. Welcome
    in shell programming !

    You will find already written scripts at
    http://imapsync.lamiral.info/examples/

Hacking
    Feel free to hack imapsync as the NOLIMIT license permits it.

Links
    Entries for imapsync:
    https://web.archive.org/web/20070202005121/http://www.imap.org/products/
    showall.php

SIMILAR SOFTWARES
      imap_tools    : http://www.athensfbc.com/imap_tools
      offlineimap   : https://github.com/nicolas33/offlineimap
      mbsync        : http://isync.sourceforge.net/
      mailsync      : http://mailsync.sourceforge.net/
      mailutil      : http://www.washington.edu/imap/
                      part of the UW IMAP tookit.
      imaprepl      : http://www.bl0rg.net/software/
                      http://freecode.com/projects/imap-repl/
      imapcopy      : http://home.arcor.de/armin.diehl/imapcopy/imapcopy.html
      migrationtool : http://sourceforge.net/projects/migrationtool/
      imapmigrate   : http://sourceforge.net/projects/cyrus-utils/
      wonko_imapsync: http://wonko.com/article/554
                      see also file W/tools/wonko_ruby_imapsync
      exchange-away : http://exchange-away.sourceforge.net/
      pop2imap      : http://www.linux-france.org/prj/pop2imap/

    Feedback (good or bad) will often be welcome.

    $Id: imapsync,v 1.678 2016/01/21 19:47:02 gilles Exp gilles $

