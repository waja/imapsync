$VAR1 = {
          'teelaunch' => [
                           'defined',
                           'logfileprepa',
                           'croak',
                           'encoding',
                           'new',
                           'autoflush'
                         ],
          'setlogfile' => [
                            'my',
                            'filter_forbidden_characters',
                            'slash_to_underscore',
                            'filter_forbidden_characters',
                            'slash_to_underscore',
                            'logfile',
                            'return'
                          ],
          'check_capability' => [
                                  'my',
                                  'has_capability',
                                  'has_capability',
                                  'myprintf',
                                  'myprintf',
                                  'myprint'
                                ],
          'tests_imapsping' => [
                                 'note',
                                 'tests_imapsping',
                                 'is',
                                 'imapsping',
                                 'is',
                                 'imapsping',
                                 'is',
                                 'imapsping',
                                 'is',
                                 'imapsping',
                                 'note',
                                 'tests_imapsping'
                               ],
          'testunitsession' => [
                                 'testsunit',
                                 'done_testing'
                               ],
          'tests_cache_dir_fix' => [
                                     'note',
                                     'tests_cache_dir_fix',
                                     'ok',
                                     'cache_dir_fix',
                                     'ok',
                                     'cache_dir_fix',
                                     'ok',
                                     'cache_dir_fix',
                                     'ok',
                                     'cache_dir_fix',
                                     'ok',
                                     'cache_dir_fix',
                                     'ok',
                                     'cache_dir_fix',
                                     'ok',
                                     'cache_dir_fix',
                                     'ok',
                                     'cache_dir_fix',
                                     'ok',
                                     'cache_dir_fix',
                                     'note',
                                     'tests_cache_dir_fix'
                                   ],
          'search_dyn_lib_locale_linux' => [
                                             'myprint',
                                             'backtick'
                                           ],
          'foldersizesatend' => [
                                  'timenext',
                                  'IsUnconnected',
                                  'IsUnconnected',
                                  'folders',
                                  'foldersizes_diff_list',
                                  'foldersizes_total',
                                  'all_defined',
                                  'errors_incr'
                                ],
          'backtick' => [
                          'open3',
                          'myprint',
                          'waitpid',
                          'myprint',
                          'return',
                          'return',
                          'join'
                        ],
          'tests_appendlimit' => [
                                   'note',
                                   'tests_appendlimit',
                                   'is',
                                   'appendlimit',
                                   'is',
                                   'appendlimit',
                                   'mock_capability',
                                   'is',
                                   'appendlimit',
                                   'note',
                                   'tests_appendlimit'
                                 ],
          'set_tls' => [
                         'Starttls'
                       ],
          'tests_delete1emptyfolders_unit' => [
                                                'note',
                                                'tests_delete1emptyfolders_unit',
                                                'is_deeply',
                                                'delete1emptyfolders',
                                                'is_deeply',
                                                'note',
                                                'tests_delete1emptyfolders_unit'
                                              ],
          'appendlimit_from_capability' => [
                                             'myprint',
                                             'myprint',
                                             'Dump',
                                             'capability_of',
                                             'myprint',
                                             'is_an_integer'
                                           ],
          'flags_regex' => [
                             'myprint',
                             'myprint',
                             'if',
                             'myprint',
                             'return',
                             'return'
                           ],
          'tests_guess_special' => [
                                     'note',
                                     'tests_guess_special',
                                     'build_possible_special',
                                     'ok',
                                     'guess_special',
                                     'ok',
                                     'guess_special',
                                     'ok',
                                     'guess_special',
                                     'ok',
                                     'guess_special',
                                     'note',
                                     'tests_guess_special'
                                   ],
          'tests_logfile' => [
                               'note',
                               'tests_logfile',
                               'skip',
                               'is',
                               'logfile',
                               'is',
                               'logfile',
                               'is',
                               'logfile',
                               'is',
                               'logfile',
                               'is',
                               'logfile',
                               'is',
                               'logfile',
                               'is',
                               'logfile',
                               'is',
                               'logfile',
                               'is',
                               'logfile',
                               'is',
                               'logfile',
                               'note',
                               'tests_logfile'
                             ],
          'mock_capability' => [
                                 'require_ok',
                                 'new',
                                 'mock'
                               ],
          'hashsync' => [
                          'join',
                          'hmac_sha1_hex',
                          'myprint',
                          'return'
                        ],
          'tests_memory_stress' => [
                                     'note',
                                     'tests_memory_stress',
                                     'is',
                                     'memory_stress',
                                     'note',
                                     'tests_memory_stress'
                                   ],
          'good_date' => [
                           'return',
                           's',
                           'myprint',
                           'myprint',
                           'length',
                           'length',
                           'length',
                           'mysprintf',
                           'mysprintf',
                           'mysprintf',
                           'mysprintf',
                           's',
                           's',
                           's',
                           'myprint',
                           'mysprintf',
                           'mysprintf',
                           'mysprintf',
                           'mysprintf',
                           'qw',
                           's',
                           'myprint',
                           'myprint',
                           'myprint',
                           's',
                           'myprint',
                           's',
                           's',
                           's',
                           's',
                           'mysprintf',
                           's',
                           's',
                           's',
                           's',
                           'mysprintf',
                           'mysprintf',
                           'return',
                           'qq',
                           'return'
                         ],
          'eta' => [
                     'my',
                     'return',
                     'timesince',
                     'time_remaining',
                     'myprint',
                     'localtime',
                     'return',
                     'mysprintf'
                   ],
          'output_reset_with' => [
                                   'join'
                                 ],
          'xmasterauth' => [
                             'User',
                             'Password',
                             'tag_and_run',
                             'exit_clean',
                             'myprint',
                             '_imap_command',
                             'md5_hex',
                             'exit_clean',
                             'tag_and_run',
                             'exit_clean',
                             'State',
                             'State'
                           ],
          'tests_output' => [
                              'note',
                              'tests_output',
                              'is',
                              'output',
                              'is',
                              'output',
                              'is',
                              'output',
                              'is',
                              'output',
                              'is',
                              'output',
                              'is',
                              'output',
                              'note',
                              'tests_output'
                            ],
          'tests_list_keys_in_2_not_in_1' => [
                                               'note',
                                               'tests_list_keys_in_2_not_in_1',
                                               'ok',
                                               'list_keys_in_2_not_in_1',
                                               'ok',
                                               'compare_lists',
                                               'list_keys_in_2_not_in_1',
                                               'ok',
                                               'compare_lists',
                                               'list_keys_in_2_not_in_1',
                                               'ok',
                                               'compare_lists',
                                               'list_keys_in_2_not_in_1',
                                               'ok',
                                               'compare_lists',
                                               'list_keys_in_2_not_in_1',
                                               'ok',
                                               'compare_lists',
                                               'list_keys_in_2_not_in_1',
                                               'ok',
                                               'compare_lists',
                                               'list_keys_in_2_not_in_1',
                                               'note',
                                               'tests_list_keys_in_2_not_in_1'
                                             ],
          'tests_errors_log' => [
                                  'note',
                                  'tests_errors_log',
                                  'is',
                                  'errors_log',
                                  'is',
                                  'errors_log',
                                  'is_deeply',
                                  'errors_log',
                                  'is_deeply',
                                  'errors_log',
                                  'is_deeply',
                                  'errors_log',
                                  'is_deeply',
                                  'errors_log',
                                  'note',
                                  'tests_errors_log'
                                ],
          'reconnect_if_needed' => [
                                     'Server',
                                     'IsUnconnected',
                                     'reconnect',
                                     'State',
                                     'reconnect'
                                   ],
          'tests_imapsync_context' => [
                                        'note',
                                        'tests_imapsync_context',
                                        'like',
                                        'imapsync_context',
                                        'note',
                                        'tests_imapsync_context'
                                      ],
          'tests_useheader_suggestion' => [
                                            'note',
                                            'tests_useheader_suggestion',
                                            'is',
                                            'useheader_suggestion',
                                            'is',
                                            'useheader_suggestion',
                                            'is',
                                            'useheader_suggestion',
                                            'note',
                                            'tests_useheader_suggestion'
                                          ],
          'cgibegin' => [
                          'under_cgi_context',
                          'import',
                          'qw',
                          'import',
                          'qw',
                          'new'
                        ],
          'tests_remove_edging_blanks' => [
                                            'note',
                                            'tests_remove_edging_blanks',
                                            'is',
                                            'remove_edging_blanks',
                                            'is',
                                            'remove_edging_blanks',
                                            'is',
                                            'remove_edging_blanks',
                                            'note',
                                            'tests_remove_edging_blanks'
                                          ],
          'tests_ucsecond' => [
                                'note',
                                'tests_ucsecond',
                                'ok',
                                'ucsecond',
                                'ok',
                                'ucsecond',
                                'ok',
                                'ucsecond',
                                'ok',
                                'ucsecond',
                                'ok',
                                'ucsecond',
                                'ok',
                                'ucsecond',
                                'ok',
                                'ucsecond',
                                'ok',
                                'ucsecond',
                                'note',
                                'tests_ucsecond'
                              ],
          'install_signals' => [
                                 'under_docker_context',
                                 'output',
                                 'output',
                                 'defined',
                                 'sig_install',
                                 'defined',
                                 'defined',
                                 'defined',
                                 'defined',
                                 'sig_install',
                                 'sig_install',
                                 'sig_install',
                                 'sig_install',
                                 'sig_install_toggle_sleep'
                               ],
          'message_exists' => [
                                'my',
                                'return',
                                'Uid',
                                'search',
                                'myprint',
                                'return',
                                'return'
                              ],
          'permanentflags' => [
                                'myprint',
                                'return',
                                'return'
                              ],
          'tests_quota_extract_storage_current_in_bytes' => [
                                                              'note',
                                                              'tests_quota_extract_storage_current_in_bytes',
                                                              'ok',
                                                              'quota_extract_storage_current_in_bytes',
                                                              'note',
                                                              'tests_quota_extract_storage_current_in_bytes'
                                                            ],
          'remove_from_requested_folders' => [
                                               'return'
                                             ],
          'get_separator' => [
                               'my',
                               'my',
                               'myprint',
                               'guess_separator',
                               'myprint',
                               'myprint',
                               'has_capability',
                               'separator',
                               'myprint',
                               'myprint',
                               'return',
                               'return',
                               'myprint',
                               'return',
                               'myprint',
                               'help_to_guess_sep',
                               'return',
                               'myprint',
                               'return',
                               'myprint',
                               'help_to_guess_sep',
                               'return'
                             ],
          'tests_hashsync' => [
                                'note',
                                'tests_hashsync',
                                'is',
                                'hashsync',
                                'is',
                                'hashsync',
                                'is',
                                'hashsync',
                                'is',
                                'hashsync',
                                'is',
                                'hashsync',
                                'note',
                                'tests_hashsync'
                              ],
          'labels_remove_subfolder1' => [
                                          'quotewords',
                                          'myprint',
                                          'join',
                                          'quotewords',
                                          'join',
                                          'uniq'
                                        ],
          'search_dyn_lib_locale' => [
                                       'search_dyn_lib_locale_darwin',
                                       'search_dyn_lib_locale_linux',
                                       'search_dyn_lib_locale_MSWin32'
                                     ],
          'tests_split_around_equal' => [
                                          'note',
                                          'tests_split_around_equal',
                                          'is',
                                          'split_around_equal',
                                          'is_deeply',
                                          'split_around_equal',
                                          'is_deeply',
                                          'split_around_equal',
                                          'is_deeply',
                                          'split_around_equal',
                                          'note',
                                          'tests_split_around_equal'
                                        ],
          'errorsdump' => [
                            'my',
                            'return'
                          ],
          'cache_map' => [
                           'myprint',
                           'match_a_cache_file',
                           'exists',
                           'exists',
                           'max',
                           'return'
                         ],
          'build_possible_special' => [
                                        'qw',
                                        'myprint',
                                        'Dump',
                                        'return'
                                      ],
          'timesince' => [
                           'return',
                           'max',
                           'min'
                         ],
          'tests_loadavg' => [
                               'note',
                               'tests_loadavg',
                               'skip',
                               'is',
                               'loadavg',
                               'is_deeply',
                               'loadavg',
                               'skip',
                               'is',
                               'loadavg',
                               'ok',
                               'loadavg',
                               'is_deeply',
                               'loadavg',
                               'skip',
                               'is_deeply',
                               'loadavg',
                               'note',
                               'tests_loadavg'
                             ],
          'sync_flags' => [
                            'my',
                            'myprint',
                            'flags',
                            'flags',
                            'flags_for_host2',
                            'flagscase',
                            'myprint',
                            'flags',
                            'flags',
                            'split',
                            'split',
                            'compare_lists',
                            'myprint',
                            'flags',
                            'flags',
                            'store',
                            'errors_incr'
                          ],
          'usage' => [
                       'usage_footer',
                       'mypod2usage',
                       'backslash_caret',
                       'join',
                       'return'
                     ],
          'tests_compare_lists' => [
                                     'note',
                                     'tests_compare_lists',
                                     'ok',
                                     'compare_lists',
                                     'ok',
                                     'compare_lists',
                                     'ok',
                                     'compare_lists',
                                     'ok',
                                     'compare_lists',
                                     'ok',
                                     'compare_lists',
                                     'ok',
                                     'compare_lists',
                                     'ok',
                                     'compare_lists',
                                     'ok',
                                     'compare_lists',
                                     'ok',
                                     'compare_lists',
                                     'ok',
                                     'compare_lists',
                                     'ok',
                                     'compare_lists',
                                     'ok',
                                     'compare_lists',
                                     'ok',
                                     'compare_lists',
                                     'ok',
                                     'compare_lists',
                                     'ok',
                                     'compare_lists',
                                     'ok',
                                     'compare_lists',
                                     'ok',
                                     'compare_lists',
                                     'ok',
                                     'compare_lists',
                                     'ok',
                                     'compare_lists',
                                     'ok',
                                     'compare_lists',
                                     'ok',
                                     'compare_lists',
                                     'ok',
                                     'compare_lists',
                                     'ok',
                                     'compare_lists',
                                     'ok',
                                     'compare_lists',
                                     'ok',
                                     'compare_lists',
                                     'ok',
                                     'compare_lists',
                                     'ok',
                                     'compare_lists',
                                     'ok',
                                     'compare_lists',
                                     'ok',
                                     'compare_lists',
                                     'ok',
                                     'compare_lists',
                                     'ok',
                                     'compare_lists',
                                     'ok',
                                     'compare_lists',
                                     'ok',
                                     'compare_lists',
                                     'ok',
                                     'compare_lists',
                                     'ok',
                                     'compare_lists',
                                     'note',
                                     'tests_compare_lists'
                                   ],
          'flags_for_host2' => [
                                 'my',
                                 'defined',
                                 'flags_regex',
                                 'flagscase',
                                 'flags_filter',
                                 'return'
                               ],
          'delete_messages_on_any' => [
                                        'my',
                                        'Debug',
                                        'myprint',
                                        'delete_message',
                                        'Range',
                                        'join',
                                        'errors_incr',
                                        'uidexpunge_or_expunge',
                                        'Debug'
                                      ],
          'tests_version_from_rcs' => [
                                        'note',
                                        'tests_version_from_rcs',
                                        'is',
                                        'version_from_rcs',
                                        'is',
                                        'version_from_rcs',
                                        'is',
                                        'version_from_rcs',
                                        'note',
                                        'tests_version_from_rcs'
                                      ],
          'tests_get_options' => [
                                   'note',
                                   'tests_get_options',
                                   'is',
                                   'get_options',
                                   'qw',
                                   'is',
                                   'is',
                                   'get_options',
                                   'qw',
                                   'is',
                                   'is',
                                   'is',
                                   'get_options',
                                   'qw',
                                   'is',
                                   'is',
                                   'get_options',
                                   'qw',
                                   'is',
                                   'is',
                                   'get_options',
                                   'is',
                                   'get_options',
                                   'is',
                                   'get_options',
                                   'is',
                                   'get_options',
                                   'qw',
                                   'is',
                                   'get_options',
                                   'qw',
                                   'is',
                                   'get_options',
                                   'qw',
                                   'is',
                                   'get_options',
                                   'qw',
                                   'is',
                                   'get_options',
                                   'qw',
                                   'is',
                                   'myprint',
                                   'Dump',
                                   'note',
                                   'tests_get_options'
                                 ],
          'tests_truncmess' => [
                                 'note',
                                 'tests_truncmess',
                                 'is',
                                 'truncmess',
                                 'is',
                                 'truncmess',
                                 'is',
                                 'truncmess',
                                 'is',
                                 'truncmess',
                                 'is',
                                 'truncmess',
                                 'is',
                                 'truncmess',
                                 'is',
                                 'truncmess',
                                 'note',
                                 'tests_truncmess'
                               ],
          'bytes_display_string' => [
                                      'defined',
                                      'return',
                                      'match_number',
                                      'return',
                                      'abs',
                                      'mysprintf',
                                      'abs',
                                      'mysprintf',
                                      'abs',
                                      'mysprintf',
                                      'abs',
                                      'mysprintf',
                                      'mysprintf',
                                      'myprint',
                                      'return'
                                    ],
          'tests_nb_messages_in_2_not_in_1' => [
                                                 'note',
                                                 'tests_stats_across_folders',
                                                 'is',
                                                 'nb_messages_in_2_not_in_1',
                                                 'is',
                                                 'nb_messages_in_2_not_in_1',
                                                 'is',
                                                 'nb_messages_in_2_not_in_1',
                                                 'is',
                                                 'nb_messages_in_2_not_in_1',
                                                 'is',
                                                 'nb_messages_in_2_not_in_1',
                                                 'note',
                                                 'tests_stats_across_folders'
                                               ],
          'cache_dir_fix' => [
                               'myprint',
                               'return'
                             ],
          'tmpdir_has_colon_bug' => [
                                      'filter_forbidden_characters',
                                      'myprint',
                                      'return',
                                      'return'
                                    ],
          'tests_string_to_file' => [
                                      'note',
                                      'tests_string_to_file',
                                      'is',
                                      'string_to_file',
                                      'is',
                                      'string_to_file',
                                      'is',
                                      'string_to_file',
                                      'ok',
                                      'mkpath',
                                      'is',
                                      'string_to_file',
                                      'is',
                                      'string_to_file',
                                      'skip',
                                      'is',
                                      'string_to_file',
                                      'note',
                                      'tests_string_to_file'
                                    ],
          'myGetOptions' => [
                              'under_cgi_context',
                              'GetOptionsFromArray',
                              'defined',
                              'param',
                              'multi_param',
                              'myprint',
                              'ref',
                              'ref',
                              'ref',
                              'ref',
                              'param'
                            ],
          'tests_remove_not_num' => [
                                      'note',
                                      'tests_remove_not_num',
                                      'ok',
                                      'remove_not_num',
                                      'remove_not_num',
                                      'ok',
                                      'remove_not_num',
                                      'remove_not_num',
                                      'ok',
                                      'remove_not_num',
                                      'remove_not_num',
                                      'ok',
                                      'remove_not_num',
                                      'remove_not_num',
                                      'note',
                                      'tests_remove_not_num'
                                    ],
          'tests_tmpdir_has_colon_bug' => [
                                            'note',
                                            'tests_tmpdir_has_colon_bug',
                                            'ok',
                                            'tmpdir_has_colon_bug',
                                            'ok',
                                            'tmpdir_has_colon_bug',
                                            'ok',
                                            'tmpdir_has_colon_bug',
                                            'ok',
                                            'tmpdir_has_colon_bug',
                                            'note',
                                            'tests_tmpdir_has_colon_bug'
                                          ],
          'get_prefix' => [
                            'my',
                            'my',
                            'myprint',
                            'guess_prefix',
                            'myprint',
                            'myprint',
                            'has_capability',
                            'namespace',
                            'myprint',
                            'myprint',
                            'return',
                            'return',
                            'myprint',
                            'return',
                            'myprint',
                            'help_to_guess_prefix',
                            'return'
                          ],
          'tests_labels_add_subfolder2' => [
                                             'note',
                                             'tests_labels_add_subfolder2',
                                             'is',
                                             'labels_add_subfolder2',
                                             'is',
                                             'labels_add_subfolder2',
                                             'is',
                                             'labels_add_subfolder2',
                                             'is',
                                             'labels_add_subfolder2',
                                             'is',
                                             'labels_add_subfolder2',
                                             'is',
                                             'labels_add_subfolder2',
                                             'is',
                                             'labels_add_subfolder2',
                                             'is',
                                             'labels_add_subfolder2',
                                             'is',
                                             'labels_add_subfolder2',
                                             'is',
                                             'labels_add_subfolder2',
                                             'is',
                                             'labels_add_subfolder2',
                                             'is',
                                             'labels_add_subfolder2',
                                             'is',
                                             'labels_add_subfolder2',
                                             'is',
                                             'labels_add_subfolder2',
                                             'note',
                                             'tests_labels_add_subfolder2'
                                           ],
          'header_construct' => [
                                  'my',
                                  'header_line_normalize',
                                  'myprint',
                                  'myprint',
                                  'return'
                                ],
          'getpwuid_any_os' => [
                                 'return',
                                 'return'
                               ],
          'synclabels' => [
                            'my',
                            'all_defined',
                            'Debug',
                            'labels',
                            'Debug',
                            'myprint',
                            'labels_remove_subfolder1',
                            'myprint',
                            'labels_add_subfolder2',
                            'myprint',
                            'Debug',
                            'store',
                            'Debug'
                          ],
          'remove_qq' => [
                           'return',
                           'return'
                         ],
          'get_options' => [
                             'myprint',
                             'Dump',
                             'under_cgi_context',
                             'get_options_cgi',
                             'get_options_cmd',
                             'myprint',
                             'Dump',
                             'ref',
                             'scalar'
                           ],
          'delete_folders_in_2_not_in_1' => [
                                              'myprint',
                                              'myprint',
                                              'unsubscribe',
                                              'delete',
                                              'myprint',
                                              'myprint'
                                            ],
          'debugsleep' => [
                            'myprint'
                          ],
          'xoauth2' => [
                         'if',
                         'new',
                         'myprint',
                         'open',
                         'exit_clean',
                         'decode',
                         'myprint',
                         'myprint',
                         'myprint',
                         'myprint',
                         'encode',
                         'new',
                         'env_proxy',
                         'post',
                         'encode_entities',
                         'unless',
                         'is_success',
                         'exit_clean',
                         'myprint',
                         'decode_json',
                         'encode_base64',
                         'myprint',
                         'return'
                       ],
          'nthline' => [
                         'all_defined',
                         'file_to_array'
                       ],
          'tests_report_failures' => [
                                       'note',
                                       'tests_report_failures',
                                       'is',
                                       'report_failures',
                                       'is',
                                       'report_failures',
                                       'is',
                                       'report_failures',
                                       'is',
                                       'report_failures',
                                       'is',
                                       'report_failures',
                                       'note',
                                       'tests_report_failures'
                                     ],
          'tests_match_a_pid_number' => [
                                          'note',
                                          'tests_match_a_pid_number',
                                          'is',
                                          'match_a_pid_number',
                                          'is',
                                          'match_a_pid_number',
                                          'is',
                                          'match_a_pid_number',
                                          'is',
                                          'match_a_pid_number',
                                          'is',
                                          'match_a_pid_number',
                                          'is',
                                          'match_a_pid_number',
                                          'is',
                                          'match_a_pid_number',
                                          'is',
                                          'match_a_pid_number',
                                          'is',
                                          'match_a_pid_number',
                                          'is',
                                          'match_a_pid_number',
                                          'is',
                                          'match_a_pid_number',
                                          'is',
                                          'match_a_pid_number',
                                          'is',
                                          'match_a_pid_number',
                                          'is',
                                          'match_a_pid_number',
                                          'is',
                                          'match_a_pid_number',
                                          'is',
                                          'match_a_pid_number',
                                          'is',
                                          'match_a_pid_number',
                                          'is',
                                          'match_a_pid_number',
                                          'note',
                                          'tests_match_a_pid_number'
                                        ],
          'tcpping' => [
                         'scalar',
                         'new',
                         'new',
                         'service_check',
                         'hires',
                         'ping',
                         'sprintf',
                         'myprint',
                         'close',
                         'if'
                       ],
          'delete1emptyfolders' => [
                                     'IsUnconnected',
                                     'myprint',
                                     'is_parent',
                                     'myprint',
                                     'examine_folder_and_count',
                                     'scalar',
                                     'messages',
                                     'myprint',
                                     'myprint',
                                     'messages',
                                     'myprint',
                                     'myprint',
                                     'close',
                                     'delete_folder',
                                     'remove_deleted_folders_from_wanted_list',
                                     'myprint'
                                   ],
          'xoauth' => [
                        'mysprintf',
                        'mysprintf',
                        'uri_escape',
                        'myprint',
                        'uri_escape',
                        'md5_hex',
                        'uniqid',
                        'rand',
                        'uri_escape',
                        'length',
                        'uri_escape',
                        'myprint',
                        'hmac_sha1',
                        'uri_escape',
                        'uri_escape',
                        'encode_base64',
                        'if',
                        'length',
                        'myprint',
                        'encode_base64'
                      ],
          'authenticate_imap' => [
                                   'my',
                                   'check_capability',
                                   'User',
                                   'Domain',
                                   'Authuser',
                                   'Password',
                                   'xmasterauth',
                                   'Authmechanism',
                                   'User',
                                   'Authmechanism',
                                   'Authcallback',
                                   'Authcallback',
                                   'Authcallback',
                                   'login',
                                   'IsUnconnected',
                                   'myprint',
                                   'IsUnconnected',
                                   'exit_clean',
                                   'myprint',
                                   'myprint',
                                   'Authmechanism',
                                   'login',
                                   'exit_clean',
                                   'proxyauth',
                                   'exit_clean'
                                 ],
          'delete_folder' => [
                               'unsubscribe',
                               'delete',
                               'myprint',
                               'myprint'
                             ],
          'lost_connection' => [
                                 'my',
                                 'IsUnconnected',
                                 '_filter',
                                 '_filter',
                                 'myprint',
                                 'myprint',
                                 'return',
                                 'return'
                               ],
          'touch' => [
                       'open',
                       'myprint',
                       'return'
                     ],
          'tests_message_for_host2' => [
                                         'note',
                                         'tests_message_for_host2',
                                         'is',
                                         'message_for_host2',
                                         'is',
                                         'message_for_host2',
                                         'require_ok',
                                         'new',
                                         'mock',
                                         'is',
                                         'message_for_host2',
                                         'is',
                                         'skip',
                                         'skip',
                                         'is',
                                         'message_for_host2',
                                         'is',
                                         'is',
                                         'message_for_host2',
                                         'is',
                                         'is',
                                         'message_for_host2',
                                         'is',
                                         'note',
                                         'tests_message_for_host2'
                                       ],
          'is_an_integer' => [
                               'return'
                             ],
          'tests_imapsync_basename' => [
                                         'note',
                                         'tests_imapsync_basename',
                                         'ok',
                                         'imapsync_basename',
                                         'ok',
                                         'imapsync_basename',
                                         'note',
                                         'tests_imapsync_basename'
                                       ],
          'size_filtered_flag' => [
                                    'return',
                                    'return',
                                    'return'
                                  ],
          'length_ref' => [
                            'length'
                          ],
          'ask_for_password_new' => [
                                      'get_stdin_masked'
                                    ],
          'tests_get_options_cgi_context' => [
                                               'note',
                                               'tests_get_options_cgi',
                                               'is',
                                               'get_options',
                                               'import',
                                               'qw',
                                               'is',
                                               'get_options',
                                               'new',
                                               'is',
                                               'get_options',
                                               'is',
                                               'is',
                                               'new',
                                               'is',
                                               'get_options',
                                               'is',
                                               'new',
                                               'get_options',
                                               'is_deeply',
                                               'new',
                                               'get_options',
                                               'is_deeply',
                                               'new',
                                               'get_options',
                                               'is_deeply',
                                               'new',
                                               'get_options',
                                               'is_deeply',
                                               'new',
                                               'get_options',
                                               'is_deeply',
                                               'new',
                                               'get_options',
                                               'is',
                                               'new',
                                               'get_options',
                                               'is',
                                               'myprint',
                                               'Dump',
                                               'new',
                                               'get_options',
                                               'is',
                                               'new',
                                               'get_options',
                                               'is',
                                               'new',
                                               'get_options',
                                               'is',
                                               'is',
                                               'myprint',
                                               'Dump',
                                               'new',
                                               'get_options',
                                               'is',
                                               'myprint',
                                               'Dump',
                                               'note',
                                               'tests_get_options_cgi_context'
                                             ],
          'usage_complete' => [
                                'return'
                              ],
          'sync_flags_after_copy' => [
                                       'my',
                                       'flags',
                                       'myprint',
                                       'sync_flags',
                                       'myprint'
                                     ],
          'abort' => [
                       'myprint',
                       'firstline',
                       'myprint',
                       'killpid'
                     ],
          'get_options_cgi' => [
                                 'myGetOptions',
                                 'tests_get_options_cgi',
                                 'tests_myGetOptions',
                                 'output'
                               ],
          'output_start' => [
                              'join'
                            ],
          'skipmess' => [
                          'myprint',
                          'myprint',
                          'myprint',
                          'myprint',
                          'myprint',
                          'return',
                          'return',
                          'return'
                        ],
          'get_password1' => [
                               'myprint',
                               'ask_for_password',
                               'myprint',
                               'exit_clean'
                             ],
          'tests_testsunit' => [
                                 'note',
                                 'tests_testunit',
                                 'is',
                                 'testsunit',
                                 'is',
                                 'testsunit',
                                 'is',
                                 'testsunit',
                                 'is',
                                 'testsunit',
                                 'is',
                                 'testsunit',
                                 'note',
                                 'tests_testunit'
                               ],
          'tests_memory_consumption' => [
                                          'note',
                                          'tests_memory_consumption',
                                          'like',
                                          'memory_consumption',
                                          'like',
                                          'memory_consumption',
                                          'like',
                                          'memory_consumption',
                                          'like',
                                          'memory_consumption_ratio',
                                          'like',
                                          'memory_consumption_ratio',
                                          'like',
                                          'memory_consumption_ratio',
                                          'like',
                                          'memory_consumption',
                                          'note',
                                          'tests_memory_consumption'
                                        ],
          'capability_of' => [
                               'search_in_array'
                             ],
          'message_for_host2' => [
                                   'myprint',
                                   'debugmemory',
                                   'message_to_file',
                                   'myprint',
                                   'debugmemory',
                                   'length_ref',
                                   'errors_incr',
                                   'skipmess',
                                   'myprint',
                                   'subject',
                                   'myprint',
                                   'regexmess',
                                   'myprint',
                                   'pipemess',
                                   'myprint',
                                   'add_header',
                                   'myprint',
                                   'is_an_integer',
                                   'truncmess',
                                   'length_ref',
                                   'myprint',
                                   'myprint',
                                   'debugmemory'
                                 ],
          'tests_tail' => [
                            'note',
                            'tests_tail',
                            'ok',
                            'mkpath',
                            'ok',
                            'ok',
                            'is',
                            'tail',
                            'is',
                            'tail',
                            'is',
                            'tail',
                            'is',
                            'tail',
                            'is',
                            'string_to_file',
                            'is',
                            'tail',
                            'is',
                            'string_to_file',
                            'is',
                            'tail',
                            'is',
                            'tail',
                            'is',
                            'string_to_file',
                            'is',
                            'tail',
                            'note',
                            'tests_tail'
                          ],
          'tests_labels_remove_subfolder1' => [
                                                'note',
                                                'tests_labels_remove_subfolder1',
                                                'is',
                                                'labels_remove_subfolder1',
                                                'is',
                                                'labels_remove_subfolder1',
                                                'is',
                                                'labels_remove_subfolder1',
                                                'is',
                                                'labels_remove_subfolder1',
                                                'is',
                                                'labels_remove_subfolder1',
                                                'is',
                                                'labels_remove_subfolder1',
                                                'is',
                                                'labels_remove_subfolder1',
                                                'is',
                                                'labels_remove_subfolder1',
                                                'is',
                                                'labels_remove_subfolder1',
                                                'is',
                                                'labels_remove_subfolder1',
                                                'is',
                                                'labels_remove_subfolder1',
                                                'is',
                                                'labels_remove_subfolder1',
                                                'note',
                                                'tests_labels_remove_subfolder1'
                                              ],
          'tests_permanentflags' => [
                                      'note',
                                      'tests_permanentflags',
                                      'ok',
                                      'permanentflags',
                                      'ok',
                                      'permanentflags',
                                      'ok',
                                      'permanentflags',
                                      'ok',
                                      'permanentflags',
                                      'note',
                                      'tests_permanentflags'
                                    ],
          'separator_invert' => [
                                  'my',
                                  'return',
                                  'all_defined',
                                  'if',
                                  'return'
                                ],
          'resolvrev_with_getaddrinfo' => [
                                            'getaddrinfo',
                                            'myprint',
                                            'while',
                                            'getnameinfo',
                                            'NIx_NOSERV',
                                            'myprint',
                                            'myprint'
                                          ],
          'check_lib_version' => [
                                   'myprint',
                                   'myprint'
                                 ],
          'select_msgs_by_fetch' => [
                                      'messages',
                                      'myprint',
                                      'fetch_hash',
                                      'uidnext',
                                      'fetch_hash',
                                      'myprint',
                                      'fetch_hash',
                                      'return',
                                      'myprint',
                                      'search',
                                      'return',
                                      'my',
                                      'myprint',
                                      'epoch',
                                      'epoch',
                                      'msgs_from_maxmin',
                                      'return'
                                    ],
          'quota' => [
                       'Debug',
                       'Debug',
                       'has_capability',
                       'Debug',
                       'myprint',
                       'getquotaroot',
                       'quota',
                       'quota',
                       'myprint',
                       'Debug',
                       'quota_extract_storage_limit_in_bytes',
                       'quota_extract_storage_current_in_bytes',
                       'mysprintf',
                       'myprint',
                       'errors_incr'
                     ],
          'search_dyn_lib_locale_darwin' => [
                                              'myprint',
                                              'backtick'
                                            ],
          'flagscase' => [
                           'ucsecond',
                           'ucsecond',
                           'return'
                         ],
          'firstline' => [
                           'nthline'
                         ],
          'remove_pidfile_not_running' => [
                                            'myprint',
                                            'myprint',
                                            'myprint',
                                            'firstline',
                                            'match_a_pid_number',
                                            'myprint',
                                            'myprint',
                                            'myprint',
                                            'myprint',
                                            'myprint',
                                            'myprint'
                                          ],
          'match_a_pid_number' => [
                                    'match',
                                    'abs',
                                    'abs'
                                  ],
          'check_binary_embed_all_dyn_libs' => [
                                                 'search_dyn_lib_locale',
                                                 'myprint',
                                                 'myprint',
                                                 'myprint'
                                               ],
          'tests_setlogfile' => [
                                  'note',
                                  'tests_setlogfile',
                                  'is',
                                  'setlogfile',
                                  'skip',
                                  'is',
                                  'setlogfile',
                                  'is',
                                  'setlogfile',
                                  'is',
                                  'setlogfile',
                                  'is',
                                  'setlogfile',
                                  'is',
                                  'setlogfile',
                                  'is',
                                  'setlogfile',
                                  'is',
                                  'setlogfile',
                                  'is',
                                  'setlogfile',
                                  'is',
                                  'setlogfile',
                                  'note',
                                  'tests_setlogfile'
                                ],
          'compare_lists' => [
                               'return',
                               'return',
                               'return'
                             ],
          'tests_sanitize' => [
                                'note',
                                'tests_remove_edging_blanks',
                                'is',
                                'sanitize',
                                'is',
                                'sanitize',
                                'is',
                                'is',
                                'is',
                                'note',
                                'tests_remove_edging_blanks'
                              ],
          'get_options_cmd' => [
                                 'output',
                                 'myGetOptions',
                                 'myprint',
                                 'Dump',
                                 'output',
                                 'myprint',
                                 'myprint'
                               ],
          'select_msgs_by_age' => [
                                    'my',
                                    'my',
                                    'sentsince',
                                    'sentbefore',
                                    'msgs_from_maxmin',
                                    'return'
                                  ],
          'get_password2' => [
                               'myprint',
                               'ask_for_password',
                               'myprint',
                               'exit_clean'
                             ],
          'tests_toggle_sleep' => [
                                    'note',
                                    'tests_toggle_sleep',
                                    'is',
                                    'toggle_sleep',
                                    'is',
                                    'toggle_sleep',
                                    'is',
                                    'toggle_sleep',
                                    'is',
                                    'toggle_sleep',
                                    'is',
                                    'toggle_sleep',
                                    'is',
                                    'toggle_sleep',
                                    'is',
                                    'toggle_sleep',
                                    'is',
                                    'toggle_sleep',
                                    'skip',
                                    'kill',
                                    'is',
                                    'sig_install',
                                    'is',
                                    'kill',
                                    'is',
                                    'is',
                                    'kill',
                                    'is',
                                    'is',
                                    'kill',
                                    'is',
                                    'is',
                                    'kill',
                                    'is',
                                    'note',
                                    'tests_toggle_sleep'
                                  ],
          'tmpdir_fix_colon_bug' => [
                                      'myprint',
                                      'return',
                                      'tmpdir_has_colon_bug',
                                      'return',
                                      'filter_forbidden_characters',
                                      'myprint',
                                      'return',
                                      'myprint',
                                      'return',
                                      'myprint',
                                      'rmove',
                                      'myprint',
                                      'myprint',
                                      'myprint',
                                      'myprint',
                                      'myprint',
                                      'return'
                                    ],
          'fix_Inbox_INBOX_mapping' => [
                                         'my',
                                         'return'
                                       ],
          'tototo' => [
                        'myprint'
                      ],
          'tests_capability_of' => [
                                     'note',
                                     'tests_capability_of',
                                     'is',
                                     'capability_of',
                                     'is',
                                     'capability_of',
                                     'mock_capability',
                                     'is',
                                     'capability_of',
                                     'is',
                                     'capability_of',
                                     'note',
                                     'tests_capability_of'
                                   ],
          'tests_labels' => [
                              'note',
                              'tests_labels',
                              'is',
                              'labels',
                              'is',
                              'labels',
                              'require_ok',
                              'new',
                              'mock',
                              'return',
                              'mock',
                              'mock',
                              'Unescape',
                              'is',
                              'labels',
                              'is',
                              'labels',
                              'note',
                              'tests_labels'
                            ],
          'createhashfileifneeded' => [
                                        'rand32',
                                        'dirname',
                                        'myprint',
                                        'myprint'
                                      ],
          'tests_decompose_regex' => [
                                       'note',
                                       'tests_decompose_regex',
                                       'ok',
                                       'ok',
                                       'compare_lists',
                                       'decompose_regex',
                                       'ok',
                                       'compare_lists',
                                       'decompose_regex',
                                       'note',
                                       'tests_decompose_regex'
                                     ],
          'tests_eta' => [
                           'note',
                           'tests_eta',
                           'is',
                           'eta',
                           'is',
                           'eta',
                           'is',
                           'eta',
                           'is',
                           'localtime',
                           'eta',
                           'is',
                           'localtime',
                           'eta',
                           'note',
                           'tests_eta'
                         ],
          'tests_all_defined' => [
                                   'note',
                                   'tests_all_defined',
                                   'is',
                                   'all_defined',
                                   'is',
                                   'all_defined',
                                   'is',
                                   'all_defined',
                                   'is',
                                   'all_defined',
                                   'is',
                                   'all_defined',
                                   'is',
                                   'all_defined',
                                   'is',
                                   'all_defined',
                                   'is',
                                   'all_defined',
                                   'note',
                                   'tests_all_defined'
                                 ],
          'tests_sanitize_subfolder' => [
                                          'note',
                                          'tests_sanitize_subfolder',
                                          'is',
                                          'sanitize_subfolder',
                                          'is',
                                          'sanitize_subfolder',
                                          'is',
                                          'sanitize_subfolder',
                                          'is',
                                          'sanitize_subfolder',
                                          'is',
                                          'sanitize_subfolder',
                                          'is',
                                          'sanitize_subfolder',
                                          'is',
                                          'sanitize_subfolder',
                                          'is',
                                          'sanitize_subfolder',
                                          'note',
                                          'tests_sanitize_subfolder'
                                        ],
          'jux_utf8_old' => [
                              'imap_utf7_decode_old',
                              'myprint',
                              'return',
                              'myprint',
                              'return'
                            ],
          'login_imap' => [
                            'my',
                            'myprint',
                            'init_imap',
                            'connect',
                            'exit_clean',
                            'myprint',
                            'peerhost',
                            'Results',
                            'myprint',
                            'myprint',
                            'join',
                            'capability',
                            'has_capability',
                            'myprint',
                            'IsAuthenticated',
                            'myprintf',
                            'exit_clean',
                            'set_tls',
                            'starttls',
                            'exit_clean',
                            'myprint',
                            'authenticate_imap',
                            'myprint',
                            'return'
                          ],
          'special_from_folders_hash' => [
                                           'can',
                                           'errors_incr',
                                           'return',
                                           'folders_hash',
                                           'myprintf',
                                           'join',
                                           'myprintf',
                                           'join',
                                           'myprint',
                                           'return'
                                         ],
          'umask_str' => [
                           'oct',
                           'return',
                           'sprintf'
                         ],
          'tests_clean_cache' => [
                                   'note',
                                   'tests_clean_cache',
                                   'ok',
                                   'rmtree',
                                   'ok',
                                   'mkpath',
                                   'qw',
                                   'ok',
                                   'touch',
                                   'ok',
                                   'ok',
                                   'ok',
                                   'ok',
                                   'ok',
                                   'ok',
                                   'ok',
                                   'clean_cache',
                                   'ok',
                                   'ok',
                                   'ok',
                                   'ok',
                                   'ok',
                                   'ok',
                                   'note',
                                   'tests_clean_cache'
                                 ],
          'list_folders_in_2_not_in_1' => [
                                            'list_keys_in_2_not_in_1',
                                            'list_keys_in_2_not_in_1',
                                            'return'
                                          ],
          'tests_diff_or_NA' => [
                                  'note',
                                  'tests_diff_or_NA',
                                  'is',
                                  'diff_or_NA',
                                  'is',
                                  'diff_or_NA',
                                  'is',
                                  'diff_or_NA',
                                  'is',
                                  'diff_or_NA',
                                  'is',
                                  'diff_or_NA',
                                  'is',
                                  'diff_or_NA',
                                  'is',
                                  'diff_or_NA',
                                  'is',
                                  'diff_or_NA',
                                  'is',
                                  'diff_or_NA',
                                  'is',
                                  'diff_or_NA',
                                  'is',
                                  'diff_or_NA',
                                  'is',
                                  'diff_or_NA',
                                  'is',
                                  'diff_or_NA',
                                  'note',
                                  'tests_diff_or_NA'
                                ],
          'skip_macosx' => [
                             'return',
                             'hostname'
                           ],
          'tests_secondline' => [
                                  'note',
                                  'tests_secondline',
                                  'is',
                                  'secondline',
                                  'is',
                                  'secondline',
                                  'ok',
                                  'mkpath',
                                  'is',
                                  'string_to_file',
                                  'is',
                                  'secondline',
                                  'note',
                                  'tests_secondline'
                                ],
          'connect_socket' => [
                                'my',
                                'peerhost',
                                'peerport',
                                'peerhost',
                                'peerport',
                                'new',
                                'Socket',
                                'Results',
                                'myprint'
                              ],
          'imap2_folder_name' => [
                                   'myprint',
                                   'return',
                                   'myprint',
                                   'return',
                                   'remove_last_char_if_is',
                                   'part_to_removed',
                                   'myprint',
                                   'prefix_seperator_invertion',
                                   'regextrans2',
                                   'return'
                                 ],
          'tests_always_fail' => [
                                   'note',
                                   'tests_always_fail',
                                   'is',
                                   'note',
                                   'tests_always_fail'
                                 ],
          'format_for_imap_arg' => [
                                     'return',
                                     'qw',
                                     'return'
                                   ],
          'logfileprepa' => [
                              'defined',
                              'myprint',
                              'dirname',
                              'do_valid_directory',
                              'return',
                              'return'
                            ],
          'file_to_string' => [
                                'return',
                                'myprint'
                              ],
          'string_to_file' => [
                                'my',
                                'if',
                                'if',
                                'dirname',
                                'myprint',
                                'sysopen',
                                'myprint'
                              ],
          'tests_get_stdin_masked' => [
                                        'note',
                                        'tests_get_stdin_masked',
                                        'is',
                                        'get_stdin_masked',
                                        'is',
                                        'get_stdin_masked',
                                        'note',
                                        'tests_get_stdin_masked'
                                      ],
          'usage_footer' => [
                              'localhost_info',
                              'homepage',
                              'check_last_release'
                            ],
          'guess_separator' => [
                                 'return',
                                 'myprint',
                                 'return'
                               ],
          'tests_backtick' => [
                                'note',
                                'tests_backtick',
                                'is',
                                'backtick',
                                'is',
                                'backtick',
                                'skip',
                                'backtick',
                                'ok',
                                'myprint',
                                'backtick',
                                'ok',
                                'ok',
                                'myprint',
                                'ok',
                                'backtick',
                                'ok',
                                'backtick',
                                'skip',
                                'is',
                                'backtick',
                                'backtick',
                                'ok',
                                'myprint',
                                'backtick',
                                'ok',
                                'ok',
                                'myprint',
                                'ok',
                                'backtick',
                                'ok',
                                'backtick',
                                'is',
                                'backtick',
                                'backtick',
                                'myprint',
                                'note',
                                'tests_backtick'
                              ],
          'resolv' => [
                        'resolv_with_getaddrinfo',
                        'return',
                        'inet_aton',
                        'inet_ntoa'
                      ],
          'tests_check_binary_embed_all_dyn_libs' => [
                                                       'note',
                                                       'tests_check_binary_embed_all_dyn_libs',
                                                       'is',
                                                       'check_binary_embed_all_dyn_libs',
                                                       'note',
                                                       'tests_check_binary_embed_all_dyn_libs'
                                                     ],
          'loadavg_linux' => [
                               'firstline',
                               'all_defined',
                               'myprint'
                             ],
          'pidfile' => [
                         'filter_forbidden_characters',
                         'slash_to_underscore',
                         'filter_forbidden_characters',
                         'slash_to_underscore'
                       ],
          'module_version_str' => [
                                    'my',
                                    'mysprintf',
                                    'return'
                                  ],
          'tests_flags_filter' => [
                                    'note',
                                    'tests_flags_filter',
                                    'ok',
                                    'flags_filter',
                                    'ok',
                                    'flags_filter',
                                    'ok',
                                    'flags_filter',
                                    'ok',
                                    'flags_filter',
                                    'ok',
                                    'flags_filter',
                                    'ok',
                                    'flags_filter',
                                    'note',
                                    'tests_flags_filter'
                                  ],
          'mysprintf' => [
                           'my'
                         ],
          'automap' => [
                         'myprint',
                         'myprint',
                         'special_from_folders_hash',
                         'special_from_folders_hash',
                         'build_possible_special',
                         'build_guess_special',
                         'build_automap'
                       ],
          'loadavg_darwin' => [
                                'myprint',
                                'myprint',
                                'firstline',
                                'myprint'
                              ],
          'foldersizes_total' => [
                                   'scalar',
                                   'scalar',
                                   'add',
                                   'add',
                                   'max',
                                   'add',
                                   'add',
                                   'max',
                                   'myprintf',
                                   'myprintf',
                                   'myprint',
                                   'myprintf',
                                   'myprintf',
                                   'myprint',
                                   'myprintf',
                                   'bytes_display_string',
                                   'myprintf',
                                   'bytes_display_string',
                                   'myprint',
                                   'myprintf',
                                   'bytes_display_string',
                                   'myprintf',
                                   'bytes_display_string',
                                   'myprint',
                                   'myprintf',
                                   'timenext'
                                 ],
          'tests_do_valid_directory' => [
                                          'note',
                                          'tests_do_valid_directory',
                                          'skip',
                                          'ok',
                                          'do_valid_directory',
                                          'ok',
                                          'do_valid_directory',
                                          'skip',
                                          'diag',
                                          'ok',
                                          'do_valid_directory',
                                          'diag',
                                          'ok',
                                          'do_valid_directory',
                                          'note',
                                          'tests_do_valid_directory'
                                        ],
          'get_stdin_masked' => [
                                  'prompt',
                                  'myprint'
                                ],
          'banner_imapsync' => [
                                 'command_line_nopassword',
                                 'return'
                               ],
          'errors_log' => [
                            'join'
                          ],
          'private_folders_separators_and_prefixes' => [
                                                         'myprint',
                                                         'get_separator',
                                                         'get_separator',
                                                         'get_prefix',
                                                         'get_prefix',
                                                         'myprint',
                                                         'myprint'
                                                       ],
          'match' => [
                       'my',
                       'myprint'
                     ],
          'sync_flags_fir' => [
                                'size_filtered_flag',
                                'sync_flags'
                              ],
          'tests_length_ref' => [
                                  'note',
                                  'tests_length_ref',
                                  'is',
                                  'length_ref',
                                  'is',
                                  'length_ref',
                                  'is',
                                  'length_ref',
                                  'is',
                                  'length_ref',
                                  'note',
                                  'tests_length_ref'
                                ],
          'justconnect' => [
                             'justconnect1',
                             'justconnect2'
                           ],
          'catch_ignore' => [
                              'myprint',
                              'getppid',
                              'stats'
                            ],
          'comment_on_final_diff_in_1_not_in_2' => [
                                                     'scalar',
                                                     'scalar',
                                                     'myprint',
                                                     'myprint',
                                                     'nb_messages_in_1_not_in_2',
                                                     'myprint',
                                                     'myprint',
                                                     'myprint',
                                                     'myprint'
                                                   ],
          'logfile' => [
                         'strftime',
                         'int',
                         'return'
                       ],
          'help_to_guess_prefix' => [
                                      'my',
                                      'folders_list_to_help',
                                      'return'
                                    ],
          'tests_umask_str' => [
                                 'note',
                                 'tests_umask_str',
                                 'is',
                                 'umask_str',
                                 'umask_str',
                                 'is',
                                 'umask_str',
                                 'umask_str',
                                 'is',
                                 'umask_str',
                                 'is',
                                 'umask_str',
                                 'is',
                                 'umask_str',
                                 'is',
                                 'umask_str',
                                 'is',
                                 'umask_str',
                                 'is',
                                 'umask_str',
                                 'is',
                                 'umask_str',
                                 'skip',
                                 'is',
                                 'umask_str',
                                 'is',
                                 'umask_str',
                                 'is',
                                 'umask_str',
                                 'is',
                                 'umask_str',
                                 'is',
                                 'umask_str',
                                 'is',
                                 'umask_str',
                                 'is',
                                 'umask_str',
                                 'is',
                                 'is',
                                 'is',
                                 'note',
                                 'tests_umask_str'
                               ],
          'select_msgs' => [
                             'select_msgs_by_search',
                             'select_msgs_by_fetch',
                             'return'
                           ],
          'tests_info_date_from_uid' => [
                                          'note',
                                          'tests_info_date_from_uid',
                                          'note',
                                          'tests_info_date_from_uid'
                                        ],
          'tests_createhashfileifneeded' => [
                                              'note',
                                              'tests_createhashfileifneeded',
                                              'is',
                                              'createhashfileifneeded',
                                              'note',
                                              'tests_createhashfileifneeded'
                                            ],
          'tests_sig_install' => [
                                   'note',
                                   'tests_sig_install',
                                   'is',
                                   'sig_install',
                                   'is',
                                   'sig_install',
                                   'is',
                                   'sig_install',
                                   'skip',
                                   'kill',
                                   'is',
                                   'sig_install',
                                   'is',
                                   'kill',
                                   'is',
                                   'is',
                                   'sig_install',
                                   'is',
                                   'kill',
                                   'is',
                                   'is',
                                   'kill',
                                   'is',
                                   'is',
                                   'kill',
                                   'is',
                                   'is',
                                   'sig_install',
                                   'is',
                                   'kill',
                                   'is',
                                   'is',
                                   'kill',
                                   'is',
                                   'note',
                                   'tests_sig_install'
                                 ],
          'cgioutputenvcontext' => [
                                     'qw',
                                     'output'
                                   ],
          'tests_set_umask' => [
                                 'note',
                                 'tests_set_umask',
                                 'is',
                                 'set_umask',
                                 'is',
                                 'set_umask',
                                 'note',
                                 'tests_set_umask'
                               ],
          'imap_id_stuff' => [
                               'imap_id',
                               'myprint',
                               'imap_id',
                               'myprint'
                             ],
          'justconnect1' => [
                              'myprint',
                              'connect_imap',
                              'imap_id',
                              'logout'
                            ],
          'tests_max' => [
                           'note',
                           'tests_max',
                           'is',
                           'max',
                           'is',
                           'max',
                           'is',
                           'max',
                           'is',
                           'max',
                           'is',
                           'max',
                           'is',
                           'max',
                           'is',
                           'max',
                           'is',
                           'max',
                           'is',
                           'max',
                           'is',
                           'max',
                           'is',
                           'max',
                           'is',
                           'max',
                           'is',
                           'max',
                           'is',
                           'max',
                           'is',
                           'max',
                           'is',
                           'max',
                           'is',
                           'max',
                           'is',
                           'max',
                           'is',
                           'max',
                           'is',
                           'max',
                           'is',
                           'max',
                           'is',
                           'max',
                           'is',
                           'max',
                           'note',
                           'tests_max'
                         ],
          'plainauth' => [
                           'mysprintf',
                           'encode_base64'
                         ],
          'examine_folder' => [
                                'examine',
                                'errors_incr',
                                'return',
                                'return'
                              ],
          'tests_check_last_release' => [
                                          'note',
                                          'tests_check_last_release',
                                          'diag',
                                          'check_last_release',
                                          'like',
                                          'check_last_release',
                                          'like',
                                          'check_last_release',
                                          'diag',
                                          'check_last_release',
                                          'like',
                                          'check_last_release',
                                          'like',
                                          'check_last_release',
                                          'like',
                                          'check_last_release',
                                          'like',
                                          'check_last_release',
                                          'like',
                                          'check_last_release',
                                          'diag',
                                          'check_last_release',
                                          'note',
                                          'tests_check_last_release'
                                        ],
          'tests_operators_and_exclam_precedence' => [
                                                       'note',
                                                       'tests_operators_and_exclam_precedence',
                                                       'is',
                                                       'is',
                                                       'is',
                                                       'not',
                                                       'not',
                                                       'is',
                                                       'not',
                                                       'not',
                                                       'delete_messages_on_any',
                                                       'is',
                                                       'is',
                                                       'is',
                                                       'is',
                                                       'is',
                                                       'is',
                                                       'is',
                                                       'is',
                                                       'is',
                                                       'note',
                                                       'tests_operators_and_exclam_precedence'
                                                     ],
          'tests_regexmess' => [
                                 'note',
                                 'tests_regexmess',
                                 'ok',
                                 'regexmess',
                                 'ok',
                                 'not',
                                 'regexmess',
                                 'ok',
                                 'regexmess',
                                 'ok',
                                 'regexmess',
                                 'ok',
                                 'regexmess',
                                 'ok',
                                 'regexmess',
                                 'ok',
                                 'regexmess',
                                 'ok',
                                 'regexmess',
                                 'ok',
                                 'regexmess',
                                 'ok',
                                 'regexmess',
                                 'ok',
                                 'regexmess',
                                 'myprint',
                                 'regexmess',
                                 'ok',
                                 'regexmess',
                                 'ok',
                                 'regexmess',
                                 'A',
                                 'n',
                                 'ok',
                                 'regexmess',
                                 'ok',
                                 'regexmess',
                                 'ok',
                                 'regexmess',
                                 'ok',
                                 'regexmess',
                                 'ok',
                                 'regexmess',
                                 'ok',
                                 'regexmess',
                                 'ok',
                                 'regexmess',
                                 'ok',
                                 'regexmess',
                                 'ok',
                                 'regexmess',
                                 'ok',
                                 'regexmess',
                                 'ok',
                                 'regexmess',
                                 'ok',
                                 'regexmess',
                                 'A',
                                 'A',
                                 'ok',
                                 'regexmess',
                                 'ok',
                                 'regexmess',
                                 'ok',
                                 'regexmess',
                                 'ok',
                                 'regexmess',
                                 'ok',
                                 'regexmess',
                                 'is',
                                 'regexmess',
                                 'is',
                                 'regexmess',
                                 'is',
                                 'regexmess',
                                 'is',
                                 'regexmess',
                                 'A',
                                 'note',
                                 'tests_regexmess'
                               ],
          'tests_resolv' => [
                              'note',
                              'tests_resolv',
                              'is',
                              'resolv',
                              'is',
                              'resolv',
                              'is',
                              'resolv',
                              'is',
                              'resolv',
                              'is',
                              'resolv',
                              'is',
                              'resolv',
                              'is',
                              'resolv',
                              'is',
                              'resolv',
                              'is',
                              'resolv',
                              'is',
                              'resolv',
                              'is',
                              'resolv',
                              'is',
                              'resolv',
                              'is',
                              'resolv',
                              'note',
                              'tests_resolv'
                            ],
          'prefix_seperator_invertion' => [
                                            'myprint',
                                            'separator_invert',
                                            'myprint',
                                            'myprint',
                                            'return'
                                          ],
          'subfolder1' => [
                            'sanitize_subfolder',
                            'myprint',
                            'myprint',
                            'add_subfolder1_to_folderrec',
                            'exit_clean'
                          ],
          'subject' => [
                         'extract_header',
                         'if',
                         'myprint',
                         'return'
                       ],
          'foldersizesatend_old' => [
                                      'timenext',
                                      'IsUnconnected',
                                      'IsUnconnected',
                                      'folders',
                                      'foldersizes',
                                      'foldersizes',
                                      'all_defined',
                                      'errors_incr'
                                    ],
          'tests_abort' => [
                             'note',
                             'tests_abort',
                             'is',
                             'abort',
                             'note',
                             'tests_abort'
                           ],
          'tests_imap2_folder_name' => [
                                         'note',
                                         'tests_imap2_folder_name',
                                         'myprint',
                                         'is',
                                         'imap2_folder_name',
                                         'is',
                                         'imap2_folder_name',
                                         'is',
                                         'imap2_folder_name',
                                         'is',
                                         'imap2_folder_name',
                                         'is',
                                         'imap2_folder_name',
                                         'is',
                                         'imap2_folder_name',
                                         'is',
                                         'imap2_folder_name',
                                         'is',
                                         'imap2_folder_name',
                                         'is',
                                         'imap2_folder_name',
                                         'is',
                                         'imap2_folder_name',
                                         'is',
                                         'imap2_folder_name',
                                         'is',
                                         'imap2_folder_name',
                                         'is',
                                         'imap2_folder_name',
                                         'is',
                                         'imap2_folder_name',
                                         'is',
                                         'imap2_folder_name',
                                         'is',
                                         'imap2_folder_name',
                                         'U',
                                         'is',
                                         'imap2_folder_name',
                                         'is',
                                         'imap2_folder_name',
                                         'is',
                                         'imap2_folder_name',
                                         'is',
                                         'imap2_folder_name',
                                         'is',
                                         'imap2_folder_name',
                                         'is',
                                         'imap2_folder_name',
                                         'is',
                                         'imap2_folder_name',
                                         'is',
                                         'imap2_folder_name',
                                         'is',
                                         'imap2_folder_name',
                                         'is',
                                         'imap2_folder_name',
                                         'is',
                                         'imap2_folder_name',
                                         'is',
                                         'imap2_folder_name',
                                         'is',
                                         'imap2_folder_name',
                                         'is',
                                         'imap2_folder_name',
                                         'is',
                                         'imap2_folder_name',
                                         'is',
                                         'imap2_folder_name',
                                         'is',
                                         'imap2_folder_name',
                                         'is',
                                         'imap2_folder_name',
                                         'is',
                                         'imap2_folder_name',
                                         'is',
                                         'imap2_folder_name',
                                         'is',
                                         'imap2_folder_name',
                                         'is',
                                         'imap2_folder_name',
                                         'set_regextrans2_for_subfolder2',
                                         'is',
                                         'imap2_folder_name',
                                         'is',
                                         'imap2_folder_name',
                                         'set_regextrans2_for_subfolder2',
                                         'is',
                                         'imap2_folder_name',
                                         'is',
                                         'imap2_folder_name',
                                         'is',
                                         'imap2_folder_name',
                                         'is',
                                         'imap2_folder_name',
                                         'is',
                                         'imap2_folder_name',
                                         'is',
                                         'imap2_folder_name',
                                         'is',
                                         'imap2_folder_name',
                                         'is',
                                         'imap2_folder_name',
                                         'is',
                                         'imap2_folder_name',
                                         'is',
                                         'imap2_folder_name',
                                         'is',
                                         'imap2_folder_name',
                                         'is',
                                         'imap2_folder_name',
                                         'is',
                                         'imap2_folder_name',
                                         'is',
                                         'imap2_folder_name',
                                         'is',
                                         'imap2_folder_name',
                                         'is',
                                         'imap2_folder_name',
                                         'is',
                                         'imap2_folder_name',
                                         'is',
                                         'imap2_folder_name',
                                         'is',
                                         'imap2_folder_name',
                                         'is',
                                         'imap2_folder_name',
                                         'is',
                                         'imap2_folder_name',
                                         'is',
                                         'imap2_folder_name',
                                         'is',
                                         'imap2_folder_name',
                                         'is',
                                         'imap2_folder_name',
                                         'is',
                                         'imap2_folder_name',
                                         'is',
                                         'imap2_folder_name',
                                         'is',
                                         'imap2_folder_name',
                                         'is',
                                         'imap2_folder_name',
                                         'note',
                                         'tests_imap2_folder_name'
                                       ],
          'tests_guess_separator' => [
                                       'note',
                                       'tests_guess_separator',
                                       'ok',
                                       'guess_separator',
                                       'ok',
                                       'guess_separator',
                                       'ok',
                                       'guess_separator',
                                       'ok',
                                       'guess_separator',
                                       'ok',
                                       'guess_separator',
                                       'ok',
                                       'guess_separator',
                                       'ok',
                                       'guess_separator',
                                       'ok',
                                       'guess_separator',
                                       'note',
                                       'tests_guess_separator'
                                     ],
          'uidexpunge_or_expunge' => [
                                       'uidexpunge',
                                       'expunge'
                                     ],
          'help_to_guess_sep' => [
                                   'my',
                                   'folders_list_to_help',
                                   'return'
                                 ],
          'isrunning' => [
                           'myprint',
                           'myprint'
                         ],
          'tests_appendlimit_from_capability' => [
                                                   'note',
                                                   'tests_appendlimit_from_capability',
                                                   'is',
                                                   'appendlimit_from_capability',
                                                   'is',
                                                   'appendlimit_from_capability',
                                                   'mock_capability',
                                                   'is',
                                                   'appendlimit_from_capability',
                                                   'mock_capability',
                                                   'is',
                                                   'appendlimit_from_capability',
                                                   'note',
                                                   'tests_appendlimit_from_capability'
                                                 ],
          'tests_pipemess' => [
                                'note',
                                'tests_pipemess',
                                'skip',
                                'ok',
                                'pipemess',
                                'ok',
                                'pipemess',
                                'qw',
                                'diag',
                                'ok',
                                'defined',
                                'pipemess',
                                'skip',
                                'ok',
                                'pipemess',
                                'ok',
                                'pipemess',
                                'ok',
                                'pipemess',
                                'ok',
                                'pipemess',
                                'ok',
                                'pipemess',
                                'diag',
                                'is',
                                'pipemess',
                                'is',
                                'pipemess',
                                'is',
                                'pipemess',
                                'is',
                                'pipemess',
                                'pipemess',
                                'is',
                                'is',
                                'pipemess',
                                'is',
                                'like',
                                'pipemess',
                                'is',
                                'like',
                                'pipemess',
                                'is',
                                'is',
                                'pipemess',
                                'is',
                                'like',
                                'pipemess',
                                'is',
                                'like',
                                'pipemess',
                                'is',
                                'like',
                                'pipemess',
                                'like',
                                'like',
                                'pipemess',
                                'is',
                                'like',
                                'note',
                                'tests_pipemess'
                              ],
          'tests_clean_cache_2' => [
                                     'note',
                                     'tests_clean_cache_2',
                                     'ok',
                                     'rmtree',
                                     'ok',
                                     'mkpath',
                                     'qw',
                                     'ok',
                                     'touch',
                                     'ok',
                                     'ok',
                                     'ok',
                                     'ok',
                                     'ok',
                                     'ok',
                                     'ok',
                                     'clean_cache',
                                     'ok',
                                     'ok',
                                     'ok',
                                     'ok',
                                     'ok',
                                     'ok',
                                     'note',
                                     'tests_clean_cache_2'
                                   ],
          'sleep_max_messages' => [
                                    'my',
                                    'return',
                                    'return',
                                    'max'
                                  ],
          'diff_or_NA' => [
                            'my',
                            'match_number',
                            'match_number',
                            'return'
                          ],
          'tests_subject' => [
                               'note',
                               'tests_subject',
                               'ok',
                               'subject',
                               'ok',
                               'subject',
                               'ok',
                               'subject',
                               'ok',
                               'subject',
                               'ok',
                               'subject',
                               'ok',
                               'subject',
                               'ok',
                               'subject',
                               'ok',
                               'subject',
                               'note',
                               'tests_subject'
                             ],
          'cleanup_before_exit' => [
                                     'remove_tmp_files',
                                     'IsConnected',
                                     'myprint',
                                     'logout',
                                     'IsConnected',
                                     'myprint',
                                     'logout',
                                     'myprint',
                                     'myprint'
                                   ],
          'time_remaining' => [
                                'my',
                                'return'
                              ],
          'check_last_release' => [
                                    'not_long_imapsync_version_public',
                                    'myprint',
                                    'return',
                                    'return',
                                    'is_a_release_number',
                                    'return',
                                    'imapsync_version',
                                    'return',
                                    'return',
                                    'return'
                                  ],
          'modulesversion' => [
                                'module_version_str',
                                'return'
                              ],
          'subfolder2' => [
                            'sanitize_subfolder',
                            'myprint',
                            'myprint',
                            'set_regextrans2_for_subfolder2'
                          ],
          'ucsecond' => [
                          'return',
                          'substr',
                          'myprint',
                          'return'
                        ],
          'max_line_length' => [
                                 'max',
                                 'return'
                               ],
          'search_dyn_lib_locale_MSWin32' => [
                                               'myprint',
                                               'qx'
                                             ],
          'foldersize' => [
                            'all_defined',
                            'examine',
                            'select',
                            'errors_incr',
                            'IsUnconnected',
                            'select_msgs',
                            'IsUnconnected',
                            'fetch_hash',
                            'errors_incr',
                            'uidnext',
                            'fetch_hash',
                            'errors_incr',
                            'max',
                            'return'
                          ],
          'catch_reconnect' => [
                                 'here_twice',
                                 'myprint',
                                 'catch_exit',
                                 'myprint',
                                 'getppid',
                                 'myprint',
                                 'myprint',
                                 'State',
                                 'reconnect',
                                 'myprint',
                                 'exit_clean',
                                 'myprint',
                                 'State',
                                 'reconnect',
                                 'myprint',
                                 'exit_clean',
                                 'myprint'
                               ],
          'after_get_options' => [
                                   'myprint',
                                   'myprint',
                                   'usage'
                                 ],
          'tests_cache_folder' => [
                                    'note',
                                    'tests_cache_folder',
                                    'ok',
                                    'cache_folder',
                                    'ok',
                                    'cache_folder',
                                    'ok',
                                    'cache_folder',
                                    'ok',
                                    'cache_folder',
                                    'ok',
                                    'cache_folder',
                                    'ok',
                                    'cache_folder',
                                    'ok',
                                    'cache_folder',
                                    'ok',
                                    'cache_folder',
                                    'note',
                                    'tests_cache_folder'
                                  ],
          'sanitize' => [
                          'qw',
                          'remove_edging_blanks'
                        ],
          'justconnect2' => [
                              'myprint',
                              'connect_imap',
                              'imap_id',
                              'logout'
                            ],
          'folders_list_to_help' => [
                                      'my',
                                      'return'
                                    ],
          'tests_epoch' => [
                             'note',
                             'tests_epoch',
                             'ok',
                             'epoch',
                             'ok',
                             'epoch',
                             'ok',
                             'epoch',
                             'ok',
                             'epoch',
                             'ok',
                             'epoch',
                             'ok',
                             'epoch',
                             'ok',
                             'epoch',
                             'ok',
                             'epoch',
                             'ok',
                             'epoch',
                             'ok',
                             'epoch',
                             'is',
                             'epoch',
                             'is',
                             'epoch',
                             'note',
                             'tests_epoch'
                           ],
          'tests_sslcheck' => [
                                'note',
                                'tests_sslcheck',
                                'is',
                                'sslcheck',
                                'is',
                                'sslcheck',
                                'is',
                                'sslcheck',
                                'is',
                                'sslcheck',
                                'is',
                                'is',
                                'sslcheck',
                                'is',
                                'sslcheck',
                                'is',
                                'sslcheck',
                                'note',
                                'tests_sslcheck'
                              ],
          'tests_true' => [
                            'note',
                            'tests_true',
                            'is',
                            'note',
                            'tests_true'
                          ],
          'missing_option' => [
                                'exit_clean'
                              ],
          'timenext' => [
                          'myprint',
                          'return'
                        ],
          'sig_install' => [
                             'myprint',
                             'myprint',
                             'mysub',
                             'myprint',
                             'output'
                           ],
          'simulong' => [
                          'myprint',
                          'myprint',
                          'sleep'
                        ],
          'do_valid_directory' => [
                                    'return',
                                    'myprint',
                                    'return',
                                    'myprintf',
                                    'getpwuid_any_os',
                                    'oct',
                                    'getpwuid_any_os',
                                    'uid',
                                    'return',
                                    'myprint',
                                    'mkpath',
                                    'myprint',
                                    'return',
                                    'return'
                                  ],
          'loadavg' => [
                         'loadavg_linux',
                         'loadavg_freebsd',
                         'loadavg_darwin',
                         'loadavg_windows',
                         'return'
                       ],
          'tests_is_a_release_number' => [
                                           'note',
                                           'tests_is_a_release_number',
                                           'is',
                                           'is_a_release_number',
                                           'ok',
                                           'is_a_release_number',
                                           'ok',
                                           'is_a_release_number',
                                           'ok',
                                           'is_a_release_number',
                                           'imapsync_version',
                                           'imapsync_version',
                                           'ok',
                                           'is_a_release_number',
                                           'note',
                                           'tests_is_a_release_number'
                                         ],
          'tests_mock_capability' => [
                                       'note',
                                       'tests_mock_capability',
                                       'ok',
                                       'mock_capability',
                                       'ok',
                                       'isa',
                                       'is',
                                       'capability',
                                       'ok',
                                       'mock_capability',
                                       'is',
                                       'capability',
                                       'ok',
                                       'mock_capability',
                                       'is',
                                       'capability',
                                       'ok',
                                       'mock_capability',
                                       'is',
                                       'capability',
                                       'ok',
                                       'mock_capability',
                                       'is_deeply',
                                       'capability',
                                       'ok',
                                       'mock_capability',
                                       'is_deeply',
                                       'capability',
                                       'ok',
                                       'mock_capability',
                                       'is_deeply',
                                       'capability',
                                       'ok',
                                       'mock_capability',
                                       'is_deeply',
                                       'capability',
                                       'note',
                                       'tests_mock_capability'
                                     ],
          'set_umask' => [
                           'umask_str',
                           'umask_str',
                           'output'
                         ],
          'tests_search_in_array' => [
                                       'note',
                                       'tests_search_in_array',
                                       'is',
                                       'search_in_array',
                                       'is',
                                       'search_in_array',
                                       'is',
                                       'search_in_array',
                                       'is',
                                       'search_in_array',
                                       'note',
                                       'tests_search_in_array'
                                     ],
          'reconnect_12_if_needed' => [
                                        'reconnect_if_needed',
                                        'reconnect_if_needed'
                                      ],
          'create_folder_old' => [
                                   'my',
                                   'myprint',
                                   'exists',
                                   'myprint',
                                   'return',
                                   'create',
                                   'LastError',
                                   'errors_incr',
                                   'return',
                                   'exists',
                                   'return',
                                   'myprint',
                                   'return',
                                   'myprint',
                                   'return'
                                 ],
          'cpu_number' => [
                            'myprint',
                            'backtick',
                            'chomp',
                            'myprint',
                            'myprint',
                            'elsif',
                            'file_to_array',
                            'myprint',
                            'return',
                            'integer_or_1'
                          ],
          'tests_convert_sep_to_slash' => [
                                            'note',
                                            'tests_convert_sep_to_slash',
                                            'ok',
                                            'convert_sep_to_slash',
                                            'ok',
                                            'convert_sep_to_slash',
                                            'ok',
                                            'convert_sep_to_slash',
                                            'ok',
                                            'convert_sep_to_slash',
                                            'ok',
                                            'convert_sep_to_slash',
                                            'ok',
                                            'convert_sep_to_slash',
                                            'ok',
                                            'convert_sep_to_slash',
                                            'note',
                                            'tests_convert_sep_to_slash'
                                          ],
          'tests_write_pidfile' => [
                                     'note',
                                     'tests_write_pidfile',
                                     'is',
                                     'write_pidfile',
                                     'is',
                                     'write_pidfile',
                                     'is',
                                     'write_pidfile',
                                     'is',
                                     'write_pidfile',
                                     'ok',
                                     'mkpath',
                                     'is',
                                     'touch',
                                     'is',
                                     'write_pidfile',
                                     'is',
                                     'firstline',
                                     'is',
                                     'secondline',
                                     'is',
                                     'write_pidfile',
                                     'is',
                                     'write_pidfile',
                                     'is',
                                     'firstline',
                                     'is',
                                     'secondline',
                                     'note',
                                     'tests_write_pidfile'
                                   ],
          'imapsync_basename' => [
                                   'basename'
                                 ],
          'testsexit' => [
                           'tests',
                           'testsdebug',
                           'testunitsession',
                           'summary',
                           'details',
                           'scalar',
                           'expected_tests',
                           'count_0s',
                           'report_failures',
                           'reset',
                           'myprint',
                           'cleanup_mess_from_tests'
                         ],
          'printenv' => [
                          'myprint'
                        ],
          'tests_connect_socket' => [
                                      'note',
                                      'tests_connect_socket',
                                      'is',
                                      'connect_socket',
                                      'hostname',
                                      'skip_macosx',
                                      'hostname',
                                      'skip',
                                      'new',
                                      'ok',
                                      'connect_socket',
                                      'Debug',
                                      'myprint',
                                      'capability',
                                      'logout',
                                      'new',
                                      'myprint',
                                      'ok',
                                      'connect_socket',
                                      'Debug',
                                      'myprint',
                                      'capability',
                                      'close',
                                      'close',
                                      'close',
                                      'logout',
                                      'myprint',
                                      'logout',
                                      'note',
                                      'tests_connect_socket'
                                    ],
          'guess_special' => [
                               'my',
                               'myprint',
                               'return'
                             ],
          'tests_mkpath' => [
                              'note',
                              'tests_mkpath',
                              'ok',
                              'mkpath',
                              'skip',
                              'ok',
                              'mkpath',
                              'ok',
                              'ok',
                              'rmtree',
                              'ok',
                              'ok',
                              'mkpath',
                              'ok',
                              'ok',
                              'rmtree',
                              'ok',
                              'ok',
                              'ok',
                              'ok',
                              'skip',
                              'myprint',
                              'myprint',
                              'ok',
                              'mkpath',
                              'ok',
                              'ok',
                              'mkpath',
                              'ok',
                              'ok',
                              'rmtree',
                              'ok',
                              'myprint',
                              'ok',
                              'mkpath',
                              'ok',
                              'ok',
                              'rmtree',
                              'ok',
                              'ok',
                              'mkpath',
                              'ok',
                              'ok',
                              'rmtree',
                              'ok',
                              'note',
                              'tests_mkpath'
                            ],
          'cgiload' => [
                         'under_cgi_context',
                         'exit_clean'
                       ],
          'regextrans2' => [
                             'my',
                             'option',
                             'myprint',
                             'exit_clean',
                             'return'
                           ],
          'memory_consumption' => [
                                    'return',
                                    'memory_consumption_of_pids'
                                  ],
          'acls_sync' => [
                           'my',
                           'getacl',
                           'myprint',
                           'getacl',
                           'myprint',
                           'myprint',
                           'myprint',
                           'setacl',
                           'myprint'
                         ],
          'tests_foldersize' => [
                                  'note',
                                  'tests_foldersize',
                                  'is',
                                  'foldersize',
                                  'is_deeply',
                                  'is_deeply',
                                  'note',
                                  'tests_foldersize'
                                ],
          'tests_mailimapclient_connect' => [
                                              'note',
                                              'tests_mailimapclient_connect',
                                              'ok',
                                              'new',
                                              'is',
                                              'ref',
                                              'is',
                                              'connect',
                                              'is',
                                              'Server',
                                              'Server',
                                              'is',
                                              'Debug',
                                              'Debug',
                                              'is',
                                              'Port',
                                              'Port',
                                              'is',
                                              'Timeout',
                                              'Timout',
                                              'like',
                                              'ref',
                                              'connect',
                                              'like',
                                              'logout',
                                              'is',
                                              'ok',
                                              'new',
                                              'is',
                                              'Server',
                                              'Server',
                                              'is',
                                              'Debug',
                                              'Debug',
                                              'ok',
                                              'Ssl',
                                              'Ssl',
                                              'is',
                                              'Port',
                                              'Port',
                                              'like',
                                              'ref',
                                              'connect',
                                              'like',
                                              'logout',
                                              'is',
                                              'ok',
                                              'new',
                                              'is',
                                              'Server',
                                              'is',
                                              'Timeout',
                                              'Timout',
                                              'ok',
                                              'Ssl',
                                              'Ssl',
                                              'is',
                                              'Port',
                                              'Port',
                                              'hostname',
                                              'skip_macosx',
                                              'hostname',
                                              'skip',
                                              'is',
                                              'Debug',
                                              'Debug',
                                              'is',
                                              'resolv',
                                              'like',
                                              'ref',
                                              'connect',
                                              'like',
                                              'ref',
                                              'logout',
                                              'is',
                                              'note',
                                              'tests_mailimapclient_connect'
                                            ],
          'clean_cache' => [
                             'myprint',
                             'myprint',
                             'myprint',
                             'match_a_cache_file',
                             'myprint',
                             'exists',
                             'myprint',
                             'myprint',
                             'myprint',
                             'return'
                           ],
          'jux_utf8' => [
                          'imap_utf7_decode',
                          'myprint',
                          'return',
                          'myprint',
                          'return'
                        ],
          'single_sync' => [
                             'memory_consumption',
                             'loadavg',
                             'cpu_number',
                             'load_and_delay',
                             'join',
                             'ram_memory_info',
                             'get_options',
                             'cgibegin',
                             'output',
                             'get_options',
                             'docker_context',
                             'cgibuildheader',
                             'myprint',
                             'output',
                             'output_reset_with',
                             'cgiload',
                             'myprint',
                             'imapsync_version'
                           ],
          'tests_cache_map' => [
                                 'note',
                                 'tests_cache_map',
                                 'my',
                                 'ok',
                                 'cache_map',
                                 'ok',
                                 'compare_lists',
                                 'ok',
                                 'compare_lists',
                                 'ok',
                                 'ok',
                                 'ok',
                                 'myprint',
                                 'note',
                                 'tests_cache_map'
                               ],
          'tests_flagscase' => [
                                 'note',
                                 'tests_flagscase',
                                 'ok',
                                 'flagscase',
                                 'ok',
                                 'flagscase',
                                 'ok',
                                 'flagscase',
                                 'ok',
                                 'flagscase',
                                 'ok',
                                 'flagscase',
                                 'ok',
                                 'flagscase',
                                 'note',
                                 'tests_flagscase'
                               ],
          'imapsync_version' => [
                                  'version_from_rcs',
                                  'return'
                                ],
          'tests_add_subfolder1_to_folderrec' => [
                                                   'note',
                                                   'tests_add_subfolder1_to_folderrec',
                                                   'is',
                                                   'add_subfolder1_to_folderrec',
                                                   'is_deeply',
                                                   'add_subfolder1_to_folderrec',
                                                   'is_deeply',
                                                   'add_subfolder1_to_folderrec',
                                                   'is_deeply',
                                                   'is_deeply',
                                                   'add_subfolder1_to_folderrec',
                                                   'is_deeply',
                                                   'is_deeply',
                                                   'add_subfolder1_to_folderrec',
                                                   'is_deeply',
                                                   'is_deeply',
                                                   'add_subfolder1_to_folderrec',
                                                   'is_deeply',
                                                   'note',
                                                   'tests_add_subfolder1_to_folderrec'
                                                 ],
          'sort_requested_folders' => [
                                        'remove_from_requested_folders',
                                        'remove_from_requested_folders',
                                        'add_to_requested_folders',
                                        'return'
                                      ],
          'sleep_max_bytes' => [
                                 'my',
                                 'return',
                                 'myprint',
                                 'return',
                                 'max'
                               ],
          'regexmess' => [
                           'myprint',
                           'myprint',
                           'myprint',
                           'return',
                           'myprint',
                           'return'
                         ],
          'imapsync_version_public' => [
                                         'imapsync_version',
                                         'imapsync_basename',
                                         'imapsync_context',
                                         'mysprintf',
                                         'new',
                                         'return',
                                         'return'
                                       ],
          'memory_consumption_of_pids' => [
                                            'myprint',
                                            'memory_consumption_of_pids_win32',
                                            'myprint',
                                            'backtick',
                                            'myprint',
                                            'myprint',
                                            'return'
                                          ],
          'epoch' => [
                       'return',
                       's',
                       's',
                       'myprint',
                       'myprint',
                       'myprint',
                       'timegm',
                       'myprint',
                       'localtime',
                       'return'
                     ],
          'tests_match' => [
                             'note',
                             'tests_match',
                             'is',
                             'match',
                             'is',
                             'match',
                             'is',
                             'match',
                             'is',
                             'match',
                             'is',
                             'match',
                             'is',
                             'match',
                             'is',
                             'match',
                             'is',
                             'match',
                             'is',
                             'match',
                             'is',
                             'match',
                             'is',
                             'match',
                             'is',
                             'match',
                             'is',
                             'match',
                             'is',
                             'match',
                             'is',
                             'match',
                             'is',
                             'match',
                             'is',
                             'match',
                             'is',
                             'match',
                             'is',
                             'match',
                             'is',
                             'match',
                             'is',
                             'match',
                             'is',
                             'match',
                             'note',
                             'tests_match'
                           ],
          'tests_cache_dir_fix_win' => [
                                         'note',
                                         'tests_cache_dir_fix_win',
                                         'ok',
                                         'cache_dir_fix_win',
                                         'ok',
                                         'cache_dir_fix_win',
                                         'note',
                                         'tests_cache_dir_fix_win'
                                       ],
          'exchange1' => [
                           'output'
                         ],
          'is_a_release_number' => [
                                     'return'
                                   ],
          'tests_load_and_delay' => [
                                      'note',
                                      'tests_load_and_delay',
                                      'is',
                                      'load_and_delay',
                                      'is',
                                      'load_and_delay',
                                      'is',
                                      'load_and_delay',
                                      'is',
                                      'load_and_delay',
                                      'is',
                                      'load_and_delay',
                                      'is',
                                      'load_and_delay',
                                      'is',
                                      'load_and_delay',
                                      'is',
                                      'load_and_delay',
                                      'is',
                                      'load_and_delay',
                                      'is',
                                      'load_and_delay',
                                      'is',
                                      'load_and_delay',
                                      'is',
                                      'load_and_delay',
                                      'is',
                                      'load_and_delay',
                                      'is',
                                      'load_and_delay',
                                      'is',
                                      'load_and_delay',
                                      'is',
                                      'load_and_delay',
                                      'is',
                                      'load_and_delay',
                                      'is',
                                      'load_and_delay',
                                      'is',
                                      'load_and_delay',
                                      'is',
                                      'load_and_delay',
                                      'is',
                                      'load_and_delay',
                                      'is',
                                      'load_and_delay',
                                      'is',
                                      'load_and_delay',
                                      'is',
                                      'load_and_delay',
                                      'is',
                                      'load_and_delay',
                                      'is',
                                      'load_and_delay',
                                      'is',
                                      'load_and_delay',
                                      'is',
                                      'load_and_delay',
                                      'is',
                                      'load_and_delay',
                                      'is',
                                      'load_and_delay',
                                      'is',
                                      'load_and_delay',
                                      'is',
                                      'load_and_delay',
                                      'is',
                                      'load_and_delay',
                                      'is',
                                      'load_and_delay',
                                      'is',
                                      'load_and_delay',
                                      'is',
                                      'load_and_delay',
                                      'is',
                                      'load_and_delay',
                                      'note',
                                      'tests_load_and_delay'
                                    ],
          'tests_rand32' => [
                              'note',
                              'tests_rand32',
                              'rand32',
                              'myprint',
                              'is',
                              'length',
                              'is',
                              'length',
                              'rand32',
                              'note',
                              'tests_rand32'
                            ],
          'office2' => [
                         'output',
                         'output',
                         'output',
                         'output'
                       ],
          'mygetppid' => [
                           'return',
                           'return',
                           'getppid'
                         ],
          'msgs_from_maxmin' => [
                                  'my',
                                  'my',
                                  'unless',
                                  'unless',
                                  'return'
                                ],
          'foldersize_diff_compute' => [
                                         'myprint',
                                         'foldersize',
                                         'myprint',
                                         'foldersize',
                                         'diff',
                                         'diff',
                                         'diff'
                                       ],
          'cgibuildheader' => [
                                'under_cgi_context',
                                'cookie',
                                'cookie',
                                'header',
                                'hostname',
                                'elsif',
                                'header',
                                'hostname',
                                'header',
                                'hostname',
                                'output_start'
                              ],
          'info_date_from_uid' => [
                                    'epoch',
                                    'myprint'
                                  ],
          'tests_timesince' => [
                                 'note',
                                 'tests_timesince',
                                 'ok',
                                 'timesince',
                                 'ok',
                                 'timesince',
                                 'ok',
                                 'timesince',
                                 'note',
                                 'tests_timesince'
                               ],
          'tests_file_to_string' => [
                                      'note',
                                      'tests_file_to_string',
                                      'is',
                                      'file_to_string',
                                      'is',
                                      'file_to_string',
                                      'is',
                                      'file_to_string',
                                      'ok',
                                      'file_to_string',
                                      'ok',
                                      'mkpath',
                                      'is',
                                      'string_to_file',
                                      'is',
                                      'file_to_string',
                                      'is',
                                      'string_to_file',
                                      'is',
                                      'file_to_string',
                                      'note',
                                      'tests_file_to_string'
                                    ],
          'tests_synclabels' => [
                                  'note',
                                  'tests_synclabels',
                                  'is',
                                  'synclabels',
                                  'is',
                                  'synclabels',
                                  'is',
                                  'synclabels',
                                  'require_ok',
                                  'new',
                                  'mock',
                                  'return',
                                  'mock',
                                  'mock',
                                  'Unescape',
                                  'new',
                                  'mock',
                                  'is',
                                  'synclabels',
                                  'is',
                                  'synclabels',
                                  'is',
                                  'synclabels',
                                  'note',
                                  'tests_synclabels'
                                ],
          'lastuid' => [
                         'recent',
                         'myprint',
                         'max',
                         'return'
                       ],
          'max' => [
                     'return',
                     'my',
                     'is_number',
                     'return'
                   ],
          'extract_header' => [
                                'return',
                                'myprint',
                                'return'
                              ],
          'tests_logfileprepa' => [
                                    'note',
                                    'tests_logfileprepa',
                                    'is',
                                    'logfileprepa',
                                    'is',
                                    'logfileprepa',
                                    'note',
                                    'tests_logfileprepa'
                                  ],
          'toggle_sleep' => [
                              'myprint',
                              'defined',
                              'defined',
                              'max',
                              'myprint'
                            ],
          'tests_match_a_cache_file' => [
                                          'note',
                                          'tests_match_a_cache_file',
                                          'ok',
                                          'match_a_cache_file',
                                          'ok',
                                          'ok',
                                          'ok',
                                          'match_a_cache_file',
                                          'ok',
                                          'ok',
                                          'ok',
                                          'match_a_cache_file',
                                          'ok',
                                          'ok',
                                          'ok',
                                          'match_a_cache_file',
                                          'ok',
                                          'ok',
                                          'ok',
                                          'match_a_cache_file',
                                          'ok',
                                          'ok',
                                          'ok',
                                          'match_a_cache_file',
                                          'ok',
                                          'ok',
                                          'ok',
                                          'match_a_cache_file',
                                          'ok',
                                          'ok',
                                          'note',
                                          'tests_match_a_cache_file'
                                        ],
          'tests_killpid_by_parent' => [
                                         'note',
                                         'tests_killpid_by_parent',
                                         'skip',
                                         'is',
                                         'killpid',
                                         'note',
                                         'is',
                                         'killpid',
                                         'fork',
                                         'ok',
                                         'defined',
                                         'ok',
                                         'is',
                                         'kill',
                                         'is',
                                         'killpid',
                                         'is',
                                         'waitpid',
                                         'myprint',
                                         'myprint',
                                         'mygetppid',
                                         'ok',
                                         'myprint',
                                         'note',
                                         'tests_killpid_by_parent'
                                       ],
          'tests_add_header' => [
                                  'note',
                                  'tests_add_header',
                                  'ok',
                                  'add_header',
                                  'ok',
                                  'add_header',
                                  'note',
                                  'tests_add_header'
                                ],
          'tests_guess_prefix' => [
                                    'note',
                                    'tests_guess_prefix',
                                    'is',
                                    'guess_prefix',
                                    'is',
                                    'guess_prefix',
                                    'is',
                                    'guess_prefix',
                                    'is',
                                    'guess_prefix',
                                    'is',
                                    'guess_prefix',
                                    'is',
                                    'guess_prefix',
                                    'is',
                                    'guess_prefix',
                                    'is',
                                    'guess_prefix',
                                    'is',
                                    'guess_prefix',
                                    'is',
                                    'guess_prefix',
                                    'is',
                                    'guess_prefix',
                                    'is',
                                    'guess_prefix',
                                    'note',
                                    'tests_guess_prefix'
                                  ],
          'tests_good_date' => [
                                 'note',
                                 'tests_good_date',
                                 'ok',
                                 'good_date',
                                 'ok',
                                 'good_date',
                                 'ok',
                                 'good_date',
                                 'ok',
                                 'good_date',
                                 'ok',
                                 'good_date',
                                 'ok',
                                 'good_date',
                                 'ok',
                                 'good_date',
                                 'ok',
                                 'good_date',
                                 'ok',
                                 'good_date',
                                 'ok',
                                 'good_date',
                                 'ok',
                                 'good_date',
                                 'ok',
                                 'good_date',
                                 'ok',
                                 'good_date',
                                 'ok',
                                 'good_date',
                                 'ok',
                                 'good_date',
                                 'ok',
                                 'good_date',
                                 'ok',
                                 'good_date',
                                 'ok',
                                 'good_date',
                                 'ok',
                                 'good_date',
                                 'ok',
                                 'good_date',
                                 'ok',
                                 'good_date',
                                 'ok',
                                 'good_date',
                                 'ok',
                                 'good_date',
                                 'ok',
                                 'good_date',
                                 'ok',
                                 'good_date',
                                 'ok',
                                 'good_date',
                                 'ok',
                                 'good_date',
                                 'ok',
                                 'good_date',
                                 'ok',
                                 'good_date',
                                 'note',
                                 'tests_good_date'
                               ],
          'write_pidfile' => [
                               'myprint',
                               'return',
                               'myprint',
                               'myprint',
                               'myprint',
                               'myprint',
                               'return',
                               'myprint'
                             ],
          'tests_jux_utf8_old' => [
                                    'note',
                                    'tests_jux_utf8_old',
                                    'is',
                                    'jux_utf8_old',
                                    'is',
                                    'jux_utf8_old',
                                    'is',
                                    'jux_utf8_old',
                                    'is',
                                    'jux_utf8_old',
                                    'is',
                                    'jux_utf8_old',
                                    'is',
                                    'jux_utf8_old',
                                    'note',
                                    'tests_jux_utf8_old'
                                  ],
          'hashsynclocal' => [
                               'createhashfileifneeded',
                               'firstline',
                               'myprint',
                               'hashsync',
                               'return'
                             ],
          'build_automap' => [
                               'myprint',
                               'return'
                             ],
          'tests_slash_to_underscore' => [
                                           'note',
                                           'tests_slash_to_underscore',
                                           'is',
                                           'slash_to_underscore',
                                           'is',
                                           'slash_to_underscore',
                                           'is',
                                           'slash_to_underscore',
                                           'note',
                                           'tests_slash_to_underscore'
                                         ],
          'tests_remove_from_requested_folders' => [
                                                     'note',
                                                     'tests_remove_from_requested_folders',
                                                     'is',
                                                     'is_deeply',
                                                     'remove_from_requested_folders',
                                                     'is_deeply',
                                                     'remove_from_requested_folders',
                                                     'is_deeply',
                                                     'remove_from_requested_folders',
                                                     'is_deeply',
                                                     'remove_from_requested_folders',
                                                     'is_deeply',
                                                     'is_deeply',
                                                     'remove_from_requested_folders',
                                                     'is_deeply',
                                                     'remove_from_requested_folders',
                                                     'is_deeply',
                                                     'remove_from_requested_folders',
                                                     'is_deeply',
                                                     'is_deeply',
                                                     'remove_from_requested_folders',
                                                     'is_deeply',
                                                     'remove_from_requested_folders',
                                                     'is_deeply',
                                                     'is_deeply',
                                                     'remove_from_requested_folders',
                                                     'is_deeply',
                                                     'note',
                                                     'tests_remove_from_requested_folders'
                                                   ],
          'secondline' => [
                            'nthline'
                          ],
          'tests_min' => [
                           'note',
                           'tests_min',
                           'is',
                           'min',
                           'is',
                           'min',
                           'is',
                           'min',
                           'is',
                           'min',
                           'is',
                           'min',
                           'is',
                           'min',
                           'is',
                           'min',
                           'is',
                           'min',
                           'is',
                           'min',
                           'is',
                           'min',
                           'is',
                           'min',
                           'is',
                           'min',
                           'is',
                           'min',
                           'is',
                           'min',
                           'is',
                           'min',
                           'is',
                           'min',
                           'is',
                           'min',
                           'is',
                           'min',
                           'is',
                           'min',
                           'note',
                           'tests_min'
                         ],
          'imap_utf7_decode' => [
                                  'return',
                                  'decode'
                                ],
          'set_ssl' => [
                         'myprint',
                         'Dump',
                         'Ssl'
                       ],
          'tests_firstline' => [
                                 'note',
                                 'tests_firstline',
                                 'is',
                                 'firstline',
                                 'ok',
                                 'mkpath',
                                 'is',
                                 'string_to_file',
                                 'is',
                                 'firstline',
                                 'is',
                                 'string_to_file',
                                 'is',
                                 'firstline',
                                 'is',
                                 'string_to_file',
                                 'is',
                                 'firstline',
                                 'is',
                                 'string_to_file',
                                 'is',
                                 'firstline',
                                 'note',
                                 'tests_firstline'
                               ],
          'stats' => [
                       'memory_consumption',
                       'mysprintf',
                       'useheader_suggestion',
                       'myprint',
                       'myprint',
                       'myprint',
                       'myprintf',
                       'myprint',
                       'myprint',
                       'myprint',
                       'myprint',
                       'myprint',
                       'myprint',
                       'myprint',
                       'myprint',
                       'myprint',
                       'useheader_suggestion',
                       'myprint',
                       'nb_messages_in_1_not_in_2',
                       'nb_messages_in_2_not_in_1',
                       'myprintf',
                       'myprintf',
                       'myprint',
                       'myprint',
                       'myprintf',
                       'bytes_display_string',
                       'myprintf',
                       'bytes_display_string',
                       'myprintf',
                       'myprintf',
                       'myprint',
                       'myprint',
                       'myprintf',
                       'myprint',
                       'join',
                       'loadavg',
                       'myprintf',
                       'bytes_display_string',
                       'myprint',
                       'diff_or_NA',
                       'diff_or_NA',
                       'myprintf',
                       'bytes_display_string',
                       'diff_or_NA',
                       'diff_or_NA',
                       'myprintf',
                       'bytes_display_string',
                       'comment_on_final_diff_in_1_not_in_2',
                       'comment_on_final_diff_in_2_not_in_1',
                       'myprint',
                       'myprint',
                       'myprint',
                       'homepage'
                     ],
          'slash_to_underscore' => [
                                     'return'
                                   ],
          'jux_utf8_list' => [
                               'jux_utf8',
                               'return'
                             ],
          'tests_reconnect_if_needed' => [
                                           'note',
                                           'tests_reconnect_if_needed',
                                           'is',
                                           'reconnect_if_needed',
                                           'is',
                                           'reconnect_if_needed',
                                           'new',
                                           'Debug',
                                           'is',
                                           'reconnect_if_needed',
                                           'Server',
                                           'is',
                                           'reconnect_if_needed',
                                           'is',
                                           'note',
                                           'tests_reconnect_if_needed'
                                         ],
          'filter_forbidden_characters' => [
                                             'myprint',
                                             'return'
                                           ],
          'tests_extract_header' => [
                                      'note',
                                      'tests_extract_header',
                                      'ok',
                                      'extract_header',
                                      'note',
                                      'tests_extract_header'
                                    ],
          'tests' => [
                       'note',
                       'tests',
                       'tests_folder_routines',
                       'tests_compare_lists',
                       'tests_regexmess',
                       'tests_skipmess',
                       'tests_flags_regex',
                       'tests_ucsecond',
                       'tests_permanentflags',
                       'tests_flags_filter',
                       'tests_separator_invert',
                       'tests_imap2_folder_name',
                       'tests_command_line_nopassword',
                       'tests_good_date',
                       'tests_max',
                       'tests_remove_not_num',
                       'tests_memory_consumption',
                       'tests_is_a_release_number',
                       'tests_imapsync_basename',
                       'tests_list_keys_in_2_not_in_1',
                       'tests_convert_sep_to_slash',
                       'tests_match_a_cache_file',
                       'tests_cache_map',
                       'tests_get_cache',
                       'tests_clean_cache',
                       'tests_clean_cache_2',
                       'tests_touch',
                       'tests_flagscase',
                       'tests_mkpath',
                       'tests_extract_header',
                       'tests_decompose_header',
                       'tests_epoch',
                       'tests_add_header',
                       'tests_cache_dir_fix',
                       'tests_cache_dir_fix_win',
                       'tests_filter_forbidden_characters',
                       'tests_cache_folder',
                       'tests_time_remaining',
                       'tests_decompose_regex',
                       'tests_backtick',
                       'tests_bytes_display_string',
                       'tests_header_line_normalize',
                       'tests_fix_Inbox_INBOX_mapping',
                       'tests_max_line_length',
                       'tests_subject',
                       'tests_msgs_from_maxmin',
                       'tests_tmpdir_has_colon_bug',
                       'tests_sleep_max_messages',
                       'tests_sleep_max_bytes',
                       'tests_logfile',
                       'tests_setlogfile',
                       'tests_jux_utf8_old',
                       'tests_jux_utf8',
                       'tests_pipemess',
                       'tests_jux_utf8_list',
                       'tests_guess_prefix',
                       'tests_guess_separator',
                       'tests_format_for_imap_arg',
                       'tests_imapsync_id',
                       'tests_date_from_rcs',
                       'tests_quota_extract_storage_limit_in_bytes',
                       'tests_quota_extract_storage_current_in_bytes',
                       'tests_guess_special',
                       'tests_do_valid_directory',
                       'tests_delete1emptyfolders',
                       'tests_message_for_host2',
                       'tests_length_ref',
                       'tests_firstline',
                       'tests_diff_or_NA',
                       'tests_match_number',
                       'tests_all_defined',
                       'tests_special_from_folders_hash',
                       'tests_notmatch',
                       'tests_match',
                       'tests_get_options',
                       'tests_get_options_cgi_context',
                       'tests_rand32',
                       'tests_hashsynclocal',
                       'tests_hashsync',
                       'tests_output',
                       'tests_output_reset_with',
                       'tests_output_start',
                       'tests_check_last_release',
                       'tests_loadavg',
                       'tests_cpu_number',
                       'tests_load_and_delay',
                       'tests_imapsping',
                       'tests_tcpping',
                       'tests_sslcheck',
                       'tests_not_long_imapsync_version_public',
                       'tests_reconnect_if_needed',
                       'tests_reconnect_12_if_needed',
                       'tests_sleep_if_needed',
                       'tests_string_to_file',
                       'tests_file_to_string',
                       'tests_under_cgi_context',
                       'tests_umask',
                       'tests_umask_str',
                       'tests_set_umask',
                       'tests_createhashfileifneeded',
                       'tests_slash_to_underscore',
                       'tests_testsunit',
                       'tests_count_0s',
                       'tests_report_failures',
                       'tests_min',
                       'tests_connect_socket',
                       'tests_resolvrev',
                       'tests_usage',
                       'tests_version_from_rcs',
                       'tests_backslash_caret',
                       'tests_mailimapclient_connect_bug',
                       'tests_write_pidfile',
                       'tests_remove_pidfile_not_running',
                       'tests_match_a_pid_number',
                       'tests_prefix_seperator_invertion',
                       'tests_is_an_integer',
                       'tests_integer_or_1',
                       'tests_is_number',
                       'tests_sig_install',
                       'tests_template',
                       'tests_split_around_equal',
                       'tests_toggle_sleep',
                       'tests_labels',
                       'tests_synclabels',
                       'tests_uidexpunge_or_expunge',
                       'tests_appendlimit_from_capability',
                       'tests_maxsize_setting',
                       'tests_mock_capability',
                       'tests_appendlimit',
                       'tests_capability_of',
                       'tests_search_in_array',
                       'tests_operators_and_exclam_precedence',
                       'tests_teelaunch',
                       'tests_logfileprepa',
                       'tests_useheader_suggestion',
                       'tests_nb_messages_in_2_not_in_1',
                       'tests_labels_add_subfolder2',
                       'tests_labels_remove_subfolder1',
                       'tests_resynclabels',
                       'tests_labels_remove_special',
                       'tests_uniq',
                       'tests_remove_from_requested_folders',
                       'tests_errors_log',
                       'tests_add_subfolder1_to_folderrec',
                       'tests_sanitize_subfolder',
                       'tests_remove_edging_blanks',
                       'tests_sanitize',
                       'tests_remove_last_char_if_is',
                       'tests_check_binary_embed_all_dyn_libs',
                       'tests_nthline',
                       'tests_secondline',
                       'tests_tail',
                       'tests_truncmess',
                       'tests_eta',
                       'tests_timesince',
                       'tests_timenext',
                       'tests_foldersize',
                       'tests_imapsync_context',
                       'tests_abort',
                       'tests_probe_imapssl',
                       'tests_mailimapclient_connect',
                       'tests_resolv',
                       'tests_killpid_by_parent',
                       'tests_killpid_by_brother',
                       'tests_kill_zero',
                       'tests_always_fail',
                       'done_testing',
                       'note',
                       'tests'
                     ],
          'imap_utf7_encode' => [
                                  'return',
                                  'encode'
                                ],
          'appendlimit' => [
                             'appendlimit_from_capability',
                             'myprint'
                           ],
          'integer_or_1' => [
                              'is_an_integer'
                            ],
          'flags_filter' => [
                              'my',
                              'return'
                            ],
          'create_folder' => [
                               'my',
                               'my',
                               'IsUnconnected',
                               'myprint',
                               'return',
                               'return',
                               'create_folder_old',
                               'myprint',
                               'exists',
                               'myprint',
                               'return',
                               'exists',
                               'myprint',
                               'return',
                               'exists',
                               'myprint',
                               'return',
                               'exists',
                               'create_folder',
                               'create',
                               'LastError',
                               'errors_incr',
                               'return',
                               'exists',
                               'return',
                               'myprint',
                               'return',
                               'myprint',
                               'myprint',
                               'return'
                             ],
          'sig_install_toggle_sleep' => [
                                          'myprint',
                                          'sig_install',
                                          'sig_install',
                                          'myprint'
                                        ],
          'tests_output_start' => [
                                    'note',
                                    'tests_output_start',
                                    'is',
                                    'output_start',
                                    'is',
                                    'output_start',
                                    'is',
                                    'output_start',
                                    'is',
                                    'output_start',
                                    'is',
                                    'output_start',
                                    'is',
                                    'output_start',
                                    'note',
                                    'tests_output_start'
                                  ],
          'ask_for_password' => [
                                  'myprint',
                                  'ReadMode',
                                  'myprint',
                                  'ReadMode'
                                ],
          'connect_imap' => [
                              'my',
                              'new',
                              'set_ssl',
                              'Server',
                              'Port',
                              'Debug',
                              'Timeout',
                              'myprint',
                              'connect',
                              'exit_clean',
                              'myprint',
                              'peerhost',
                              'Results',
                              'myprint',
                              'myprint',
                              'join',
                              'capability',
                              'set_tls',
                              'starttls',
                              'exit_clean',
                              'myprint',
                              'return'
                            ],
          'tests_umask' => [
                             'note',
                             'tests_umask',
                             'is',
                             'is',
                             'is',
                             'oct',
                             'is',
                             'oct',
                             'is',
                             'oct',
                             'oct',
                             'skip',
                             'is',
                             'oct',
                             'is',
                             'oct',
                             'ok',
                             'is',
                             'note',
                             'tests_umask'
                           ],
          'size_filtered' => [
                               'my',
                               'myprint',
                               'return',
                               'myprint',
                               'return',
                               'return'
                             ],
          'linelengthstuff' => [
                                 'my',
                                 'max_line_length',
                                 'myprint',
                                 'subject',
                                 'myprint',
                                 'subject',
                                 'pipemess',
                                 'myprint',
                                 'myprint'
                               ],
          'tests_sleep_if_needed' => [
                                       'note',
                                       'tests_sleep_if_needed',
                                       'is',
                                       'sleep_if_needed',
                                       'is',
                                       'sleep_if_needed',
                                       'is',
                                       'sleep_if_needed',
                                       'is',
                                       'sleep_if_needed',
                                       'is',
                                       'sleep_if_needed',
                                       'is',
                                       'sleep_if_needed',
                                       'is',
                                       'sleep_if_needed',
                                       'is',
                                       'sleep_if_needed',
                                       'is',
                                       'sleep_if_needed',
                                       'note',
                                       'tests_sleep_if_needed'
                                     ],
          'tests_output_reset_with' => [
                                         'note',
                                         'tests_output_reset_with',
                                         'is',
                                         'output_reset_with',
                                         'is',
                                         'output_reset_with',
                                         'is',
                                         'output_reset_with',
                                         'is',
                                         'output_reset_with',
                                         'is',
                                         'output_reset_with',
                                         'note',
                                         'tests_output_reset_with'
                                       ],
          'tests_header_line_normalize' => [
                                             'note',
                                             'tests_header_line_normalize',
                                             'ok',
                                             'header_line_normalize',
                                             'ok',
                                             'header_line_normalize',
                                             'ok',
                                             'header_line_normalize',
                                             'ok',
                                             'header_line_normalize',
                                             'ok',
                                             'header_line_normalize',
                                             'ok',
                                             'header_line_normalize',
                                             'ok',
                                             'header_line_normalize',
                                             'note',
                                             'tests_header_line_normalize'
                                           ],
          'tests_fix_Inbox_INBOX_mapping' => [
                                               'note',
                                               'tests_fix_Inbox_INBOX_mapping',
                                               'my',
                                               'ok',
                                               'fix_Inbox_INBOX_mapping',
                                               'ok',
                                               'fix_Inbox_INBOX_mapping',
                                               'ok',
                                               'fix_Inbox_INBOX_mapping',
                                               'ok',
                                               'fix_Inbox_INBOX_mapping',
                                               'ok',
                                               'fix_Inbox_INBOX_mapping',
                                               'ok',
                                               'fix_Inbox_INBOX_mapping',
                                               'note',
                                               'tests_fix_Inbox_INBOX_mapping'
                                             ],
          'notmatch' => [
                          'my',
                          'myprint'
                        ],
          'office1' => [
                         'output',
                         'output'
                       ],
          'tests_jux_utf8_list' => [
                                     'note',
                                     'tests_jux_utf8_list',
                                     'is',
                                     'jux_utf8_list',
                                     'is',
                                     'jux_utf8_list',
                                     'is',
                                     'jux_utf8_list',
                                     'is',
                                     'jux_utf8_list',
                                     'note',
                                     'tests_jux_utf8_list',
                                     'return'
                                   ],
          'date_for_host2' => [
                                'my',
                                'myprint',
                                'good_date',
                                'myprint',
                                'get_header',
                                'myprint',
                                'good_date',
                                'myprint',
                                'return'
                              ],
          'tests_prefix_seperator_invertion' => [
                                                  'note',
                                                  'tests_prefix_seperator_invertion',
                                                  'is',
                                                  'prefix_seperator_invertion',
                                                  'is',
                                                  'prefix_seperator_invertion',
                                                  'is',
                                                  'prefix_seperator_invertion',
                                                  'is',
                                                  'prefix_seperator_invertion',
                                                  'is',
                                                  'prefix_seperator_invertion',
                                                  'is',
                                                  'prefix_seperator_invertion',
                                                  'is',
                                                  'prefix_seperator_invertion',
                                                  'is',
                                                  'prefix_seperator_invertion',
                                                  'is',
                                                  'prefix_seperator_invertion',
                                                  'is',
                                                  'prefix_seperator_invertion',
                                                  'is',
                                                  'prefix_seperator_invertion',
                                                  'is',
                                                  'prefix_seperator_invertion',
                                                  'is',
                                                  'prefix_seperator_invertion',
                                                  'is',
                                                  'prefix_seperator_invertion',
                                                  'is',
                                                  'prefix_seperator_invertion',
                                                  'is',
                                                  'prefix_seperator_invertion',
                                                  'is',
                                                  'prefix_seperator_invertion',
                                                  'is',
                                                  'prefix_seperator_invertion',
                                                  'is',
                                                  'prefix_seperator_invertion',
                                                  'is',
                                                  'prefix_seperator_invertion',
                                                  'is',
                                                  'prefix_seperator_invertion',
                                                  'is',
                                                  'prefix_seperator_invertion',
                                                  'is',
                                                  'prefix_seperator_invertion',
                                                  'is',
                                                  'prefix_seperator_invertion',
                                                  'note',
                                                  'tests_prefix_seperator_invertion'
                                                ],
          'tests_command_line_nopassword' => [
                                               'note',
                                               'tests_command_line_nopassword',
                                               'ok',
                                               'command_line_nopassword',
                                               'ok',
                                               'command_line_nopassword',
                                               'myprint',
                                               'command_line_nopassword',
                                               'ok',
                                               'command_line_nopassword',
                                               'ok',
                                               'command_line_nopassword',
                                               'ok',
                                               'command_line_nopassword',
                                               'ok',
                                               'command_line_nopassword',
                                               'myprint',
                                               'command_line_nopassword',
                                               'ok',
                                               'command_line_nopassword',
                                               'ok',
                                               'command_line_nopassword',
                                               'note',
                                               'tests_command_line_nopassword'
                                             ],
          'tail' => [
                      'firstline',
                      'secondline',
                      'myprint',
                      'myprint',
                      'new',
                      'myprint',
                      'isrunning',
                      'defined',
                      'myprint',
                      'sleep'
                    ],
          'header_line_normalize' => [
                                       'my',
                                       'return'
                                     ],
          'tests_cpu_number' => [
                                  'note',
                                  'tests_cpu_number',
                                  'is',
                                  'is_an_integer',
                                  'cpu_number',
                                  'ok',
                                  'cpu_number',
                                  'is',
                                  'cpu_number',
                                  'is',
                                  'cpu_number',
                                  'is',
                                  'cpu_number',
                                  'is',
                                  'cpu_number',
                                  'note',
                                  'tests_cpu_number'
                                ],
          'tests_time_remaining' => [
                                      'note',
                                      'tests_time_remaining',
                                      'is',
                                      'time_remaining',
                                      'is',
                                      'time_remaining',
                                      'is',
                                      'time_remaining',
                                      'is',
                                      'time_remaining',
                                      'is',
                                      'time_remaining',
                                      'is',
                                      'time_remaining',
                                      'is',
                                      'time_remaining',
                                      'is',
                                      'time_remaining',
                                      'note',
                                      'tests_time_remaining'
                                    ],
          'tests_is_an_integer' => [
                                     'note',
                                     'tests_is_an_integer',
                                     'is',
                                     'is_an_integer',
                                     'ok',
                                     'is_an_integer',
                                     'ok',
                                     'is_an_integer',
                                     'ok',
                                     'is_an_integer',
                                     'ok',
                                     'is_an_integer',
                                     'ok',
                                     'is_an_integer',
                                     'ok',
                                     'is_an_integer',
                                     'ok',
                                     'is_an_integer',
                                     'ok',
                                     'is_an_integer',
                                     'ok',
                                     'is_an_integer',
                                     'note',
                                     'tests_is_an_integer'
                                   ],
          'memory_consumption_ratio' => [
                                          'memory_consumption',
                                          'return'
                                        ],
          'get_cache' => [
                           'myprint',
                           'return',
                           'myprint',
                           'cache_dir_fix',
                           'cache_dir_fix_win',
                           'myprint',
                           'bsd_glob',
                           'myprint',
                           'myprint',
                           'my',
                           'cache_map',
                           'clean_cache',
                           'myprint',
                           'return'
                         ],
          'tests_notmatch' => [
                                'note',
                                'tests_notmatch',
                                'is',
                                'notmatch',
                                'is',
                                'notmatch',
                                'is',
                                'notmatch',
                                'is',
                                'notmatch',
                                'is',
                                'notmatch',
                                'is',
                                'notmatch',
                                'is',
                                'notmatch',
                                'is',
                                'notmatch',
                                'is',
                                'notmatch',
                                'is',
                                'notmatch',
                                'is',
                                'notmatch',
                                'is',
                                'notmatch',
                                'is',
                                'notmatch',
                                'is',
                                'notmatch',
                                'is',
                                'notmatch',
                                'is',
                                'notmatch',
                                'is',
                                'notmatch',
                                'note',
                                'tests_notmatch'
                              ],
          'tests_bytes_display_string' => [
                                            'note',
                                            'tests_bytes_display_string',
                                            'is',
                                            'bytes_display_string',
                                            'is',
                                            'bytes_display_string',
                                            'is',
                                            'bytes_display_string',
                                            'ok',
                                            'bytes_display_string',
                                            'ok',
                                            'bytes_display_string',
                                            'ok',
                                            'bytes_display_string',
                                            'ok',
                                            'bytes_display_string',
                                            'ok',
                                            'bytes_display_string',
                                            'ok',
                                            'bytes_display_string',
                                            'ok',
                                            'bytes_display_string',
                                            'ok',
                                            'bytes_display_string',
                                            'ok',
                                            'bytes_display_string',
                                            'ok',
                                            'bytes_display_string',
                                            'ok',
                                            'bytes_display_string',
                                            'ok',
                                            'bytes_display_string',
                                            'ok',
                                            'bytes_display_string',
                                            'ok',
                                            'bytes_display_string',
                                            'myprint',
                                            'bytes_display_string',
                                            'note',
                                            'tests_bytes_display_string'
                                          ],
          'add_to_requested_folders' => [
                                          'return'
                                        ],
          'cache_folder' => [
                              'my',
                              'myprint',
                              'convert_sep_to_slash',
                              'convert_sep_to_slash',
                              'filter_forbidden_characters',
                              'myprint',
                              'return'
                            ],
          'decompose_regex' => [
                                 'my',
                                 'return',
                                 'return'
                               ],
          'catch_exit' => [
                            'myprint',
                            'getppid',
                            'myprint',
                            'stats',
                            'myprint',
                            'getppid',
                            'myprint',
                            'myprint',
                            'cleanup_before_exit',
                            'kill',
                            'exit_clean',
                            'exit_clean'
                          ],
          'catch_print' => [
                             'myprint',
                             'getppid'
                           ],
          'quota_extract_storage_current_in_bytes' => [
                                                        'myprint',
                                                        'return'
                                                      ],
          'sleep_if_needed' => [
                                 'my',
                                 'max',
                                 'timesince',
                                 'sleep_max_messages',
                                 'myprint',
                                 'myprint',
                                 'sleep_max_bytes',
                                 'min',
                                 'max',
                                 'mysprintf',
                                 'myprint'
                               ],
          'match_a_cache_file' => [
                                    'return',
                                    '_',
                                    'return'
                                  ],
          'labels_add_subfolder2' => [
                                       'uniq',
                                       'quotewords',
                                       'myprint',
                                       'join',
                                       'quotewords',
                                       'join',
                                       'quotewords',
                                       'join'
                                     ],
          'pipemess' => [
                          'string_to_file',
                          'file_to_string',
                          'chomp',
                          'file_to_string',
                          'length',
                          'myprint',
                          'myprint',
                          'myprint'
                        ],
          'tests_hashsynclocal' => [
                                     'note',
                                     'tests_hashsynclocal',
                                     'is',
                                     'hashsynclocal',
                                     'is',
                                     'hashsynclocal',
                                     'is',
                                     'hashsynclocal',
                                     'skip',
                                     'is',
                                     'hashsynclocal',
                                     'ok',
                                     'mkpath',
                                     'ok',
                                     'ok',
                                     'is',
                                     'hashsynclocal',
                                     'is',
                                     'hashsynclocal',
                                     'note',
                                     'tests_hashsynclocal'
                                   ],
          'killpid' => [
                         'myprint',
                         'myprint',
                         'kill',
                         'myprint',
                         'waitpid',
                         'myprint',
                         'waitpid',
                         'kill',
                         'myprint',
                         'waitpid',
                         'myprint',
                         'kill',
                         'myprint',
                         'myprint'
                       ],
          'tests_special_from_folders_hash' => [
                                                 'note',
                                                 'tests_special_from_folders_hash',
                                                 'require_ok',
                                                 'new',
                                                 'is',
                                                 'special_from_folders_hash',
                                                 'is',
                                                 'special_from_folders_hash',
                                                 'is_deeply',
                                                 'special_from_folders_hash',
                                                 'mock',
                                                 'return',
                                                 'is_deeply',
                                                 'special_from_folders_hash',
                                                 'note',
                                                 'tests_special_from_folders_hash',
                                                 'return'
                                               ],
          'min' => [
                     'return',
                     'my',
                     'is_number',
                     'elsif',
                     'return'
                   ],
          'debugmemory' => [
                             'return',
                             'mysprintf',
                             'memory_consumption'
                           ],
          'tests_remove_pidfile_not_running' => [
                                                  'note',
                                                  'tests_remove_pidfile_not_running',
                                                  'ok',
                                                  'mkpath',
                                                  'is',
                                                  'remove_pidfile_not_running',
                                                  'is',
                                                  'remove_pidfile_not_running',
                                                  'is',
                                                  'remove_pidfile_not_running',
                                                  'is',
                                                  'touch',
                                                  'is',
                                                  'remove_pidfile_not_running',
                                                  'is',
                                                  'string_to_file',
                                                  'is',
                                                  'remove_pidfile_not_running',
                                                  'is',
                                                  'string_to_file',
                                                  'is',
                                                  'remove_pidfile_not_running',
                                                  'is',
                                                  'string_to_file',
                                                  'is',
                                                  'remove_pidfile_not_running',
                                                  'note',
                                                  'tests_remove_pidfile_not_running'
                                                ],
          'tests_skipmess' => [
                                'note',
                                'tests_skipmess',
                                'ok',
                                'not',
                                'skipmess',
                                'ok',
                                'not',
                                'skipmess',
                                'ok',
                                'not',
                                'skipmess',
                                'ok',
                                'skipmess',
                                'ok',
                                'skipmess',
                                'ok',
                                'skipmess',
                                'ok',
                                'skipmess',
                                'ok',
                                'skipmess',
                                'ok',
                                'skipmess',
                                'ok',
                                'skipmess',
                                'ok',
                                'skipmess',
                                'ok',
                                'skipmess',
                                'ok',
                                'skipmess',
                                'ok',
                                'skipmess',
                                'ok',
                                'skipmess',
                                'ok',
                                'skipmess',
                                'ok',
                                'skipmess',
                                'ok',
                                'skipmess',
                                'A',
                                'n',
                                'ok',
                                'skipmess',
                                'ok',
                                'skipmess',
                                'ok',
                                'skipmess',
                                'ok',
                                'skipmess',
                                'ok',
                                'skipmess',
                                'ok',
                                'skipmess',
                                'ok',
                                'skipmess',
                                'ok',
                                'skipmess',
                                'ok',
                                'skipmess',
                                'ok',
                                'skipmess',
                                'ok',
                                'skipmess',
                                'ok',
                                'skipmess',
                                'note',
                                'tests_skipmess'
                              ],
          'tests_quota_extract_storage_limit_in_bytes' => [
                                                            'note',
                                                            'tests_quota_extract_storage_limit_in_bytes',
                                                            'ok',
                                                            'quota_extract_storage_limit_in_bytes',
                                                            'note',
                                                            'tests_quota_extract_storage_limit_in_bytes'
                                                          ],
          'guess_prefix' => [
                              'INBOX',
                              'return'
                            ],
          'copy_message' => [
                              'myprint',
                              'eta',
                              'size_filtered',
                              'debugsleep',
                              'myprint',
                              'message_exists',
                              'stats_update_skip_message',
                              'myprint',
                              'debugmemory',
                              'message_for_host2',
                              'myprint',
                              'debugmemory',
                              'myprint',
                              'stats_update_skip_message',
                              'linelengthstuff',
                              'stats_update_skip_message',
                              'date_for_host2',
                              'myprint',
                              'flags_for_host2',
                              'myprint',
                              'append_message_on_host2',
                              'sync_flags_after_copy',
                              'myprint',
                              'debugmemory'
                            ],
          'foldersizes' => [
                             'myprint',
                             'myprintf',
                             'jux_utf8',
                             'myprint',
                             'myprint',
                             'IsUnconnected',
                             'foldersize',
                             'myprintf',
                             'myprintf',
                             'myprintf',
                             'max',
                             'myprintf',
                             'myprintf',
                             'myprintf',
                             'bytes_display_string',
                             'myprintf',
                             'bytes_display_string',
                             'myprintf',
                             'timenext',
                             'return'
                           ],
          'tests_tcpping' => [
                               'note',
                               'tests_tcpping',
                               'is',
                               'tcpping',
                               'is',
                               'tcpping',
                               'is',
                               'tcpping',
                               'is',
                               'tcpping',
                               'is',
                               'tcpping',
                               'is',
                               'tcpping',
                               'is',
                               'tcpping',
                               'is',
                               'tcpping',
                               'is',
                               'tcpping',
                               'is',
                               'tcpping',
                               'is',
                               'tcpping',
                               'note',
                               'tests_tcpping'
                             ],
          'tests_mailimapclient_connect_bug' => [
                                                  'note',
                                                  'tests_mailimapclient_connect_bug',
                                                  'ok',
                                                  'new',
                                                  'is',
                                                  'Server',
                                                  'Server',
                                                  'is',
                                                  'Port',
                                                  'Port',
                                                  'hostname',
                                                  'skip_macosx',
                                                  'hostname',
                                                  'skip',
                                                  'like',
                                                  'ref',
                                                  'connect',
                                                  'diag',
                                                  'LastError',
                                                  'is',
                                                  'logout',
                                                  'is',
                                                  'note',
                                                  'tests_mailimapclient_connect_bug'
                                                ],
          'memory_stress' => [
                               'get',
                               'myprintf',
                               'memory_consumption',
                               'myprintf',
                               'memory_consumption'
                             ],
          'load_modules' => [
                              'import',
                              'import'
                            ],
          'is_requested_folder' => [
                                     'return'
                                   ],
          'tests_live_result' => [
                                   'note',
                                   'tests_live_result',
                                   'myprint',
                                   'myprint',
                                   'note',
                                   'tests_live_result'
                                 ],
          'homepage' => [
                          'return'
                        ],
          'tests_uidexpunge_or_expunge' => [
                                             'note',
                                             'tests_uidexpunge_or_expunge',
                                             'is',
                                             'uidexpunge_or_expunge',
                                             'is',
                                             'uidexpunge_or_expunge',
                                             'is',
                                             'uidexpunge_or_expunge',
                                             'is',
                                             'uidexpunge_or_expunge',
                                             'require_ok',
                                             'new',
                                             'is',
                                             'uidexpunge_or_expunge',
                                             'is',
                                             'uidexpunge_or_expunge',
                                             'mock',
                                             'mock',
                                             'is',
                                             'uidexpunge_or_expunge',
                                             'mock',
                                             'is',
                                             'uidexpunge_or_expunge',
                                             'mock',
                                             'is',
                                             'uidexpunge_or_expunge',
                                             'note',
                                             'tests_uidexpunge_or_expunge'
                                           ],
          'add_header' => [
                            'return'
                          ],
          'tests_sleep_max_bytes' => [
                                       'note',
                                       'tests_sleep_max_bytes',
                                       'ok',
                                       'sleep_max_bytes',
                                       'ok',
                                       'sleep_max_bytes',
                                       'ok',
                                       'sleep_max_bytes',
                                       'ok',
                                       'sleep_max_bytes',
                                       'ok',
                                       'sleep_max_bytes',
                                       'ok',
                                       'sleep_max_bytes',
                                       'ok',
                                       'sleep_max_bytes',
                                       'ok',
                                       'sleep_max_bytes',
                                       'note',
                                       'tests_sleep_max_bytes'
                                     ],
          'resolvrev' => [
                           'resolvrev_with_getaddrinfo',
                           'return'
                         ],
          'tests_match_number' => [
                                    'note',
                                    'tests_match_number',
                                    'is',
                                    'match_number',
                                    'is',
                                    'match_number',
                                    'is',
                                    'match_number',
                                    'is',
                                    'match_number',
                                    'is',
                                    'match_number',
                                    'is',
                                    'match_number',
                                    'is',
                                    'match_number',
                                    'note',
                                    'tests_match_number'
                                  ],
          'tests_delete1emptyfolders' => [
                                           'note',
                                           'tests_delete1emptyfolders',
                                           'is',
                                           'delete1emptyfolders',
                                           'is',
                                           'delete1emptyfolders',
                                           'is',
                                           'delete1emptyfolders',
                                           'require_ok',
                                           'new',
                                           'set_true',
                                           'is',
                                           'delete1emptyfolders',
                                           'set_false',
                                           'mock',
                                           'tests_delete1emptyfolders_unit',
                                           'set_true',
                                           'tests_delete1emptyfolders_unit',
                                           'set_false',
                                           'tests_delete1emptyfolders_unit',
                                           'set_true',
                                           'mock',
                                           'tests_delete1emptyfolders_unit',
                                           'messages',
                                           'mock',
                                           'mock',
                                           'tests_delete1emptyfolders_unit',
                                           'messages',
                                           'mock',
                                           'mock',
                                           'tests_delete1emptyfolders_unit',
                                           'messages',
                                           'messages',
                                           'mock',
                                           'mock',
                                           'tests_delete1emptyfolders_unit',
                                           'messages',
                                           'messages',
                                           'mock',
                                           'mock',
                                           'set_true',
                                           'tests_delete1emptyfolders_unit',
                                           'messages',
                                           'note',
                                           'tests_delete1emptyfolders'
                                         ],
          'imap_id' => [
                         'has_capability',
                         'myprint',
                         'imapsync_id',
                         'myprint',
                         'Debug',
                         'Debug',
                         'tag_and_run',
                         'tag_and_run',
                         'myprint',
                         'Debug',
                         'Dump',
                         'return'
                       ],
          'docker_context' => [
                                'under_docker_context',
                                'myprint',
                                'myprint'
                              ],
          'tests_timenext' => [
                                'note',
                                'tests_timenext',
                                'is',
                                'timenext',
                                'is',
                                'timenext',
                                'ok',
                                'timenext',
                                'ok',
                                'timenext',
                                'ok',
                                'timenext',
                                'note',
                                'tests_timenext'
                              ],
          'probe_imapssl' => [
                               'new',
                               'sysread',
                               'close'
                             ],
          'tests_format_for_imap_arg' => [
                                           'note',
                                           'tests_format_for_imap_arg',
                                           'ok',
                                           'format_for_imap_arg',
                                           'ok',
                                           'format_for_imap_arg',
                                           'ok',
                                           'format_for_imap_arg',
                                           'note',
                                           'tests_format_for_imap_arg'
                                         ],
          'build_guess_special' => [
                                     'guess_special',
                                     'myprint',
                                     'guess_special',
                                     'myprint'
                                   ],
          'maxsize_setting' => [
                                 'myprint',
                                 'appendlimit',
                                 'all_defined',
                                 'min',
                                 'myprint',
                                 'myprint'
                               ],
          'imap_utf7_decode_old' => [
                                      'return',
                                      'utf7'
                                    ],
          'foldersize_diff_present' => [
                                         'foldersize_diff_compute',
                                         'sprintf',
                                         'sprintf',
                                         'myprintf',
                                         'jux_utf8',
                                         'myprintf',
                                         'jux_utf8',
                                         'myprintf'
                                       ],
          'examine_folder_and_count' => [
                                          'examine_folder',
                                          'count_from_select'
                                        ],
          'imapsync_id' => [
                             'imapsync_version',
                             'date_from_rcs',
                             'imapsync_version',
                             'date_from_rcs',
                             'format_for_imap_arg',
                             'myprint',
                             'return'
                           ],
          'tests_imapsync_id' => [
                                   'note',
                                   'tests_imapsync_id',
                                   'ok',
                                   'imapsync_id',
                                   'note',
                                   'tests_imapsync_id'
                                 ],
          'uniq' => [
                      'push'
                    ],
          'tests_flags_regex' => [
                                   'note',
                                   'tests_flags_regex',
                                   'ok',
                                   'flags_regex',
                                   'ok',
                                   'flags_regex',
                                   'ok',
                                   'flags_regex',
                                   'ok',
                                   'flags_regex',
                                   'ok',
                                   'flags_regex',
                                   'ok',
                                   'flags_regex',
                                   'ok',
                                   'flags_regex',
                                   'ok',
                                   'flags_regex',
                                   'ok',
                                   'flags_regex',
                                   'ok',
                                   'flags_regex',
                                   'ok',
                                   'flags_regex',
                                   'ok',
                                   'flags_regex',
                                   'ok',
                                   'flags_regex',
                                   'ok',
                                   'flags_regex',
                                   'ok',
                                   'flags_regex',
                                   'ok',
                                   'flags_regex',
                                   'ok',
                                   'flags_regex',
                                   'ok',
                                   'flags_regex',
                                   'ok',
                                   'flags_regex',
                                   'ok',
                                   'flags_regex',
                                   'ok',
                                   'flags_regex',
                                   'ok',
                                   'flags_regex',
                                   'ok',
                                   'flags_regex',
                                   'ok',
                                   'flags_regex',
                                   'ok',
                                   'flags_regex',
                                   'ok',
                                   'flags_regex',
                                   'defined',
                                   'q',
                                   'ok',
                                   'flags_regex',
                                   'ok',
                                   'flags_regex',
                                   'ok',
                                   'flags_regex',
                                   'ok',
                                   'flags_regex',
                                   'is',
                                   'flags_regex',
                                   'is',
                                   'flags_regex',
                                   'is',
                                   'flags_regex',
                                   'note',
                                   'tests_flags_regex'
                                 ],
          'tests_usage' => [
                             'note',
                             'tests_usage',
                             'like',
                             'usage',
                             'myprint',
                             'like',
                             'like',
                             'like',
                             'is',
                             'usage',
                             'note',
                             'tests_usage'
                           ],
          'localhost_info' => [
                                'my',
                                'join',
                                'imapsync_version',
                                'hostname',
                                'ram_memory_info',
                                'mysprintf',
                                'return'
                              ],
          'tests_kill_zero' => [
                                 'note',
                                 'tests_kill_zero',
                                 'skip',
                                 'is',
                                 'kill',
                                 'is',
                                 'kill',
                                 'is',
                                 'kill',
                                 'is',
                                 'kill',
                                 'is',
                                 'kill',
                                 'is',
                                 'kill',
                                 'fork',
                                 'fork',
                                 'ok',
                                 'defined',
                                 'ok',
                                 'is',
                                 'kill',
                                 'is',
                                 'waitpid',
                                 'note',
                                 'is',
                                 'kill',
                                 'myprint',
                                 'wait',
                                 'note',
                                 'tests_kill_zero'
                               ],
          'exit_clean' => [
                            'myprint',
                            'myprint',
                            'cleanup_before_exit'
                          ],
          'nb_messages_in_1_not_in_2' => [
                                           'scalar',
                                           'list_keys_in_2_not_in_1'
                                         ],
          'tests_uniq' => [
                            'note',
                            'tests_uniq',
                            'is',
                            'uniq',
                            'is_deeply',
                            'uniq',
                            'is_deeply',
                            'uniq',
                            'is_deeply',
                            'uniq',
                            'note',
                            'tests_uniq'
                          ],
          'file_to_array' => [
                               'my',
                               'myprint',
                               'return'
                             ],
          'tests_killpid_by_brother' => [
                                          'note',
                                          'tests_killpid_by_brother',
                                          'skip',
                                          'myprint',
                                          'fork',
                                          'ok',
                                          'myprint',
                                          'fork',
                                          'myprint',
                                          'is',
                                          'killpid',
                                          'is',
                                          'waitpid',
                                          '_1',
                                          'is',
                                          'waitpid',
                                          '_2',
                                          'note',
                                          'tests_killpid_by_brother'
                                        ],
          'tests_backslash_caret' => [
                                       'note',
                                       'tests_backslash_caret',
                                       'is',
                                       'backslash_caret',
                                       'is',
                                       'backslash_caret',
                                       'is',
                                       'backslash_caret',
                                       'is',
                                       'backslash_caret',
                                       'is',
                                       'backslash_caret',
                                       'is',
                                       'backslash_caret',
                                       'is',
                                       'backslash_caret',
                                       'is',
                                       'backslash_caret',
                                       'is',
                                       'backslash_caret',
                                       'is',
                                       'backslash_caret',
                                       'note',
                                       'tests_backslash_caret'
                                     ],
          'parse_header_msg' => [
                                  'myprint',
                                  'myprint',
                                  'fetch',
                                  'myprint',
                                  'decompose_header',
                                  'myprint',
                                  'myprint',
                                  'Dump',
                                  'header_construct',
                                  'add_header',
                                  'myprint',
                                  'md5_base64',
                                  'myprint',
                                  'return'
                                ],
          'append_message_on_host2' => [
                                         'my',
                                         'myprint',
                                         'debugmemory',
                                         'max',
                                         'append_string',
                                         'myprint',
                                         'debugmemory',
                                         'subject',
                                         'errors_incr',
                                         'lastuid',
                                         'synclabels',
                                         'timesince',
                                         'bytes_display_string',
                                         'eta',
                                         'bytes_display_string',
                                         'myprintf',
                                         'sleep_if_needed',
                                         'myprint',
                                         'touch',
                                         'croak',
                                         'delete_message_on_host1',
                                         'myprint',
                                         'return'
                                       ],
          'loadavg_windows' => [
                                 'myprint',
                                 'myprint',
                                 'file_to_string',
                                 'myprint',
                                 'n',
                                 'myprint'
                               ],
          'tests_folder_routines' => [
                                       'note',
                                       'tests_folder_routines',
                                       'ok',
                                       'is_requested_folder',
                                       'ok',
                                       'add_to_requested_folders',
                                       'ok',
                                       'is_requested_folder',
                                       'ok',
                                       'is_requested_folder',
                                       'is_deeply',
                                       'remove_from_requested_folders',
                                       'ok',
                                       'is_requested_folder',
                                       'ok',
                                       'add_to_requested_folders',
                                       'ok',
                                       'is_requested_folder',
                                       'ok',
                                       'is_requested_folder',
                                       'ok',
                                       'remove_from_requested_folders',
                                       'ok',
                                       'is_requested_folder',
                                       'is_deeply',
                                       'remove_from_requested_folders',
                                       'ok',
                                       'compare_lists',
                                       'sort_requested_folders',
                                       'ok',
                                       'add_to_requested_folders',
                                       'ok',
                                       'compare_lists',
                                       'sort_requested_folders',
                                       'ok',
                                       'compare_lists',
                                       'sort_requested_folders',
                                       'is_deeply',
                                       'sort_requested_folders',
                                       'ok',
                                       'compare_lists',
                                       'sort_requested_folders',
                                       'ok',
                                       'add_to_requested_folders',
                                       'ok',
                                       'compare_lists',
                                       'sort_requested_folders',
                                       'ok',
                                       'add_to_requested_folders',
                                       'qw',
                                       'qw',
                                       'ok',
                                       'compare_lists',
                                       'sort_requested_folders',
                                       'note',
                                       'tests_folder_routines'
                                     ],
          'tests_probe_imapssl' => [
                                     'note',
                                     'tests_probe_imapssl',
                                     'is',
                                     'probe_imapssl',
                                     'is',
                                     'probe_imapssl',
                                     'note',
                                     'hostname',
                                     'hostname',
                                     'skip_macosx',
                                     'hostname',
                                     'skip',
                                     'like',
                                     'probe_imapssl',
                                     'ok',
                                     'resolv',
                                     'like',
                                     'probe_imapssl',
                                     'like',
                                     'probe_imapssl',
                                     'note',
                                     'tests_probe_imapssl'
                                   ],
          'comment_on_final_diff_in_2_not_in_1' => [
                                                     'scalar',
                                                     'nb_messages_in_2_not_in_1',
                                                     'myprint',
                                                     'myprint'
                                                   ],
          'list_keys_in_2_not_in_1' => [
                                         'return'
                                       ],
          'tests_msgs_from_maxmin' => [
                                        'note',
                                        'tests_msgs_from_maxmin',
                                        'msgs_from_maxmin',
                                        'ok',
                                        'compare_lists',
                                        'msgs_from_maxmin',
                                        'ok',
                                        'compare_lists',
                                        'msgs_from_maxmin',
                                        'ok',
                                        'compare_lists',
                                        'msgs_from_maxmin',
                                        'ok',
                                        'compare_lists',
                                        'note',
                                        'tests_msgs_from_maxmin'
                                      ],
          'memory_consumption_of_pids_win32' => [
                                                  'backtick',
                                                  'myprint',
                                                  'my',
                                                  'myprint',
                                                  'remove_qq',
                                                  'myprint',
                                                  'remove_qq',
                                                  'remove_Ko',
                                                  'remove_not_num',
                                                  'myprint',
                                                  'return'
                                                ],
          'add_subfolder1_to_folderrec' => [
                                             'myprint',
                                             'myprint',
                                             'myprint'
                                           ],
          'tests_is_number' => [
                                 'note',
                                 'tests_is_number',
                                 'is',
                                 'is_number',
                                 'is',
                                 'is_number',
                                 'ok',
                                 'is_number',
                                 'ok',
                                 'is_number',
                                 'ok',
                                 'is_number',
                                 'ok',
                                 'is_number',
                                 'ok',
                                 'is_number',
                                 'ok',
                                 'is_number',
                                 'ok',
                                 'is_number',
                                 'ok',
                                 'is_number',
                                 'ok',
                                 'is_number',
                                 'ok',
                                 'is_number',
                                 'note',
                                 'tests_is_number'
                               ],
          'labels' => [
                        'all_defined',
                        'fetch_hash',
                        'Unescape'
                      ],
          'tests_million_folders_baby_2' => [
                                              'note',
                                              'tests_million_folders_baby_2',
                                              'myprint',
                                              'myprint',
                                              'ok',
                                              'myprint',
                                              'note',
                                              'tests_million_folders_baby_2'
                                            ],
          'testsunit' => [
                           'myprint',
                           'myprint',
                           'myprint',
                           'myprint',
                           'function_ref'
                         ],
          'resynclabels' => [
                              'my',
                              'all_defined',
                              'labels_remove_subfolder1',
                              'labels_add_subfolder2',
                              'labels_remove_special',
                              'myprint',
                              'myprint',
                              'myprint',
                              'Debug',
                              'store',
                              'Debug'
                            ],
          'select_msgs_by_search' => [
                                       'messages',
                                       'myprint',
                                       'messages',
                                       'messages',
                                       'return',
                                       'search',
                                       'return',
                                       'select_msgs_by_age',
                                       'return'
                                     ],
          'tests_nthline' => [
                               'note',
                               'tests_nthline',
                               'is',
                               'nthline',
                               'is',
                               'nthline',
                               'ok',
                               'mkpath',
                               'is',
                               'string_to_file',
                               'is',
                               'nthline',
                               'note',
                               'tests_nthline'
                             ],
          'tests_labels_remove_special' => [
                                             'note',
                                             'tests_labels_remove_special',
                                             'is',
                                             'labels_remove_special',
                                             'is',
                                             'labels_remove_special',
                                             'is',
                                             'labels_remove_special',
                                             'is',
                                             'labels_remove_special',
                                             'is',
                                             'labels_remove_special',
                                             'is',
                                             'labels_remove_special',
                                             'note',
                                             'tests_labels_remove_special'
                                           ],
          'init_imap' => [
                           'my',
                           'new',
                           'Debug_fh',
                           'set_ssl',
                           'set_tls',
                           'connect',
                           'Clear',
                           'Server',
                           'Port',
                           'Fast_io',
                           'Buffer',
                           'Uid',
                           'Peek',
                           'Debug',
                           'Showcredentials',
                           'Timeout',
                           'Reconnectretry',
                           'Ignoresizeerrors',
                           'Maxcommandlength',
                           'return'
                         ],
          'tests_date_from_rcs' => [
                                     'note',
                                     'tests_date_from_rcs',
                                     'ok',
                                     'date_from_rcs',
                                     'note',
                                     'tests_date_from_rcs'
                                   ],
          'tests_remove_last_char_if_is' => [
                                              'note',
                                              'tests_remove_last_char_if_is',
                                              'is',
                                              'remove_last_char_if_is',
                                              'is',
                                              'remove_last_char_if_is',
                                              'is',
                                              'remove_last_char_if_is',
                                              'is',
                                              'remove_last_char_if_is',
                                              'is',
                                              'remove_last_char_if_is',
                                              'is',
                                              'remove_last_char_if_is',
                                              'note',
                                              'tests_remove_last_char_if_is'
                                            ],
          'tests_get_cache' => [
                                 'note',
                                 'tests_get_cache',
                                 'ok',
                                 'not',
                                 'get_cache',
                                 'ok',
                                 'rmtree',
                                 'ok',
                                 'mkpath',
                                 'qw',
                                 'ok',
                                 'touch',
                                 'my',
                                 'ok',
                                 'get_cache',
                                 'ok',
                                 'compare_lists',
                                 'ok',
                                 'compare_lists',
                                 'ok',
                                 'ok',
                                 'ok',
                                 'ok',
                                 'ok',
                                 'touch',
                                 'ok',
                                 'get_cache',
                                 'ok',
                                 'ok',
                                 'ok',
                                 'ok',
                                 'ok',
                                 'rmtree',
                                 'ok',
                                 'mkpath',
                                 'qw',
                                 'ok',
                                 'touch',
                                 'ok',
                                 'get_cache',
                                 'ok',
                                 'compare_lists',
                                 'ok',
                                 'compare_lists',
                                 'ok',
                                 'ok',
                                 'ok',
                                 'ok',
                                 'note',
                                 'tests_get_cache'
                               ],
          'errors_incr' => [
                             'errors_log',
                             'myprint',
                             'myprint',
                             'myprint',
                             'errorsdump',
                             'errors_log',
                             'errorsdump',
                             'myprint',
                             'exit_clean'
                           ],
          'quota_extract_storage_limit_in_bytes' => [
                                                      'myprint',
                                                      'return'
                                                    ],
          'imapsync_context' => [
                                  'under_docker_context',
                                  'under_cgi_context',
                                  'under_docker_context',
                                  'under_cgi_context'
                                ],
          'easyany' => [
                         'myprint',
                         'gmail12',
                         'myprint',
                         'gmail1',
                         'myprint',
                         'gmail2',
                         'office1',
                         'office2',
                         'exchange1',
                         'exchange2',
                         'domino1',
                         'domino2'
                       ],
          'tests_jux_utf8' => [
                                'note',
                                'tests_jux_utf8',
                                'encoding',
                                'encoding',
                                'ok',
                                'find_encoding',
                                'is',
                                'jux_utf8',
                                'is',
                                'jux_utf8',
                                'is',
                                'jux_utf8',
                                'is',
                                'jux_utf8',
                                'is',
                                'jux_utf8',
                                'is',
                                'jux_utf8',
                                'encode',
                                'is',
                                'jux_utf8',
                                'is',
                                'jux_utf8',
                                'is',
                                'jux_utf8',
                                'note',
                                'tests_jux_utf8'
                              ],
          'nb_messages_in_2_not_in_1' => [
                                           'scalar',
                                           'list_keys_in_2_not_in_1'
                                         ],
          'tests_template' => [
                                'note',
                                'tests_template',
                                'is',
                                'is_deeply',
                                'is_deeply',
                                'note',
                                'tests_template'
                              ],
          'remove_Ko' => [
                           'return',
                           'return'
                         ],
          'loadavg_freebsd' => [
                                 'myprint',
                                 'myprint',
                                 'firstline',
                                 'myprint'
                               ],
          'count_from_select' => [
                                   'myprint',
                                   'return',
                                   'return'
                                 ],
          'tests_teelaunch' => [
                                 'note',
                                 'tests_teelaunch',
                                 'is',
                                 'teelaunch',
                                 'is',
                                 'teelaunch',
                                 'is',
                                 'teelaunch',
                                 'isa_ok',
                                 'teelaunch',
                                 'is',
                                 'print',
                                 'is',
                                 'file_to_string',
                                 'is',
                                 'print',
                                 'is',
                                 'file_to_string',
                                 'note',
                                 'tests_teelaunch'
                               ],
          'tests_not_long_imapsync_version_public' => [
                                                        'note',
                                                        'tests_not_long_imapsync_version_public',
                                                        'is',
                                                        'is_a_release_number',
                                                        'not_long_imapsync_version_public',
                                                        'note',
                                                        'tests_not_long_imapsync_version_public'
                                                      ],
          'imap_utf7_encode_old' => [
                                      'utf8',
                                      'return'
                                    ],
          'tests_max_line_length' => [
                                       'note',
                                       'tests_max_line_length',
                                       'ok',
                                       'max_line_length',
                                       'ok',
                                       'max_line_length',
                                       'ok',
                                       'max_line_length',
                                       'ok',
                                       'max_line_length',
                                       'ok',
                                       'max_line_length',
                                       'ok',
                                       'max_line_length',
                                       'ok',
                                       'max_line_length',
                                       'ok',
                                       'max_line_length',
                                       'ok',
                                       'max_line_length',
                                       'ok',
                                       'max_line_length',
                                       'ok',
                                       'max_line_length',
                                       'ok',
                                       'max_line_length',
                                       'ok',
                                       'max_line_length',
                                       'note',
                                       'tests_max_line_length'
                                     ],
          'total_bytes_max_reached' => [
                                         'return',
                                         'myprint',
                                         'return'
                                       ],
          'mypod2usage' => [
                             'pod2usage',
                             'qw'
                           ],
          'version_from_rcs' => [
                                  'return'
                                ],
          'labels_remove_special' => [
                                       'quotewords',
                                       'myprint',
                                       'join'
                                     ],
          'foldersizes_diff_list' => [
                                       'imap2_folder_name',
                                       'foldersize_diff_present'
                                     ],
          'tests_integer_or_1' => [
                                    'note',
                                    'tests_integer_or_1',
                                    'is',
                                    'integer_or_1',
                                    'is',
                                    'integer_or_1',
                                    'is',
                                    'integer_or_1',
                                    'is',
                                    'integer_or_1',
                                    'is',
                                    'integer_or_1',
                                    'note',
                                    'tests_integer_or_1'
                                  ],
          'decompose_header{' => [
                                   'myprint',
                                   's',
                                   'myprint',
                                   'elsif',
                                   'myprint',
                                   'myprint',
                                   'Dump',
                                   'return'
                                 ],
          'tests_reconnect_12_if_needed' => [
                                              'note',
                                              'tests_reconnect_12_if_needed',
                                              'new',
                                              'new',
                                              'Server',
                                              'Server',
                                              'is',
                                              'reconnect_12_if_needed',
                                              'is',
                                              'is',
                                              'note',
                                              'tests_reconnect_12_if_needed'
                                            ],
          'tests_separator_invert' => [
                                        'note',
                                        'tests_separator_invert',
                                        'ok',
                                        'not',
                                        'separator_invert',
                                        'ok',
                                        'not',
                                        'separator_invert',
                                        'ok',
                                        'not',
                                        'separator_invert',
                                        'ok',
                                        'separator_invert',
                                        'ok',
                                        'separator_invert',
                                        'ok',
                                        'separator_invert',
                                        'ok',
                                        'separator_invert',
                                        'ok',
                                        'separator_invert',
                                        'ok',
                                        'separator_invert',
                                        'ok',
                                        'separator_invert',
                                        'ok',
                                        'separator_invert',
                                        'ok',
                                        'separator_invert',
                                        'note',
                                        'tests_separator_invert'
                                      ],
          'tests_resolvrev' => [
                                 'note',
                                 'tests_resolvrev',
                                 'is',
                                 'resolvrev',
                                 'is',
                                 'resolvrev',
                                 'is',
                                 'resolvrev',
                                 'is',
                                 'resolvrev',
                                 'is',
                                 'resolvrev',
                                 'is',
                                 'resolvrev',
                                 'is',
                                 'resolvrev',
                                 'is',
                                 'resolvrev',
                                 'is',
                                 'resolvrev',
                                 'is',
                                 'resolvrev',
                                 'is',
                                 'resolvrev',
                                 'is',
                                 'resolvrev',
                                 'is',
                                 'resolvrev',
                                 'note',
                                 'tests_resolvrev'
                               ],
          'not_long_imapsync_version_public' => [
                                                  'myprint',
                                                  'sigaction',
                                                  'new',
                                                  'myprint',
                                                  'imapsync_version_public',
                                                  'myprint',
                                                  'myprint',
                                                  'myprint',
                                                  'return',
                                                  'return',
                                                  'return'
                                                ],
          'ram_memory_info' => [
                                 'return',
                                 'sprintf',
                                 'get',
                                 'get'
                               ],
          'foldersizes_at_the_beggining_old' => [
                                                  'myprint',
                                                  'foldersizes',
                                                  'foldersizes',
                                                  'all_defined',
                                                  'errors_incr',
                                                  'mysprintf',
                                                  'errors_incr'
                                                ],
          'imapsping' => [
                           'tcpping'
                         ],
          'foldersizes_at_the_beggining' => [
                                              'myprint',
                                              'foldersizes_diff_list',
                                              'foldersizes_total',
                                              'all_defined',
                                              'errors_incr',
                                              'mysprintf',
                                              'errors_incr'
                                            ],
          'convert_sep_to_slash' => [
                                      'return'
                                    ],
          'tests_touch' => [
                             'note',
                             'tests_touch',
                             'ok',
                             'mkpath',
                             'ok',
                             'touch',
                             'ok',
                             'touch',
                             'ok',
                             'touch',
                             'ok',
                             'touch',
                             'ok',
                             'touch',
                             'note',
                             'tests_touch'
                           ],
          'eta_print' => [
                           'eta',
                           'myprint'
                         ],
          'tests_count_0s' => [
                                'note',
                                'tests_count_zeros',
                                'is',
                                'count_0s',
                                'is',
                                'count_0s',
                                'is',
                                'count_0s',
                                'is',
                                'count_0s',
                                'is',
                                'count_0s',
                                'note',
                                'tests_count_zeros'
                              ],
          'output' => [
                        'join'
                      ],
          'sslcheck' => [
                          'myprint',
                          'myprint',
                          'probe_imapssl',
                          'myprint',
                          'myprint',
                          'myprint',
                          'probe_imapssl',
                          'myprint',
                          'myprint'
                        ],
          'tests_resynclabels' => [
                                    'note',
                                    'tests_resynclabels',
                                    'is',
                                    'resynclabels',
                                    'is',
                                    'resynclabels',
                                    'is',
                                    'resynclabels',
                                    'is',
                                    'resynclabels',
                                    'require_ok',
                                    'new',
                                    'mock',
                                    'mock',
                                    'is',
                                    'resynclabels',
                                    'note',
                                    'tests_resynclabels'
                                  ],
          'date_from_rcs' => [
                               'qw',
                               's',
                               'myprint',
                               'myprint',
                               'myprint',
                               'return'
                             ],
          'resolv_with_getaddrinfo' => [
                                         'getaddrinfo',
                                         'myprint',
                                         'while',
                                         'getnameinfo',
                                         'NI_NUMERICHOST',
                                         'NIx_NOSERV',
                                         'myprint',
                                         'myprint',
                                         'getnameinfo',
                                         'NIx_NOSERV',
                                         'myprint'
                                       ],
          'cache_dir_fix_win' => [
                                   'myprint',
                                   'return'
                                 ],
          'tests_filter_forbidden_characters' => [
                                                   'note',
                                                   'tests_filter_forbidden_characters',
                                                   'ok',
                                                   'filter_forbidden_characters',
                                                   'ok',
                                                   'filter_forbidden_characters',
                                                   'ok',
                                                   'filter_forbidden_characters',
                                                   'ok',
                                                   'filter_forbidden_characters',
                                                   'ok',
                                                   'filter_forbidden_characters',
                                                   'skip',
                                                   'ok',
                                                   'filter_forbidden_characters',
                                                   'skip',
                                                   'ok',
                                                   'filter_forbidden_characters',
                                                   'ok',
                                                   'filter_forbidden_characters',
                                                   'ok',
                                                   'filter_forbidden_characters',
                                                   'ok',
                                                   'filter_forbidden_characters',
                                                   'ok',
                                                   'filter_forbidden_characters',
                                                   'ok',
                                                   'filter_forbidden_characters',
                                                   'note',
                                                   'tests_filter_forbidden_characters'
                                                 ],
          'tests_under_cgi_context' => [
                                         'note',
                                         'tests_under_cgi_context',
                                         'is',
                                         'under_cgi_context',
                                         'is',
                                         'under_cgi_context',
                                         'is',
                                         'under_cgi_context',
                                         'is',
                                         'under_cgi_context',
                                         'note',
                                         'tests_under_cgi_context'
                                       ],
          'command_line_nopassword' => [
                                         'mask_password_value',
                                         'return',
                                         'return',
                                         'mask_password_value',
                                         'return'
                                       ],
          'remove_not_num' => [
                                'myprint',
                                'return'
                              ],
          'testsdebug' => [
                            'note',
                            'testsdebug',
                            'ok',
                            'rmtree',
                            'tests_check_binary_embed_all_dyn_libs',
                            'tests_killpid_by_parent',
                            'tests_killpid_by_brother',
                            'tests_kill_zero',
                            'tests_connect_socket',
                            'tests_probe_imapssl',
                            'tests_always_fail',
                            'note',
                            'testsdebug',
                            'done_testing'
                          ],
          'tests_decompose_header{' => [
                                         'note',
                                         'tests_decompose_header',
                                         'decompose_header',
                                         'ok',
                                         'ok',
                                         'ok',
                                         'ok',
                                         'ok',
                                         'ok',
                                         'ok',
                                         'not',
                                         'decompose_header',
                                         'ok',
                                         'decompose_header',
                                         'ok',
                                         'decompose_header',
                                         'ok',
                                         'ok',
                                         'decompose_header',
                                         'ok',
                                         'ok',
                                         'ok',
                                         'note',
                                         'tests_decompose_header'
                                       ],
          'tests_sleep_max_messages' => [
                                          'note',
                                          'tests_sleep_max_messages',
                                          'ok',
                                          'sleep_max_messages',
                                          'ok',
                                          'sleep_max_messages',
                                          'ok',
                                          'sleep_max_messages',
                                          'ok',
                                          'sleep_max_messages',
                                          'ok',
                                          'sleep_max_messages',
                                          'ok',
                                          'sleep_max_messages',
                                          'note',
                                          'tests_sleep_max_messages'
                                        ],
          'exchange2' => [
                           'output',
                           'output',
                           'output'
                         ],
          'delete_message_on_host1' => [
                                         'my',
                                         'delete_messages_on_any'
                                       ],
          'set_regextrans2_for_subfolder2' => [
                                                'q',
                                                'q',
                                                'q',
                                                'myprint'
                                              ],
          'select_folder' => [
                               'select',
                               'errors_incr',
                               'return',
                               'return'
                             ]
        };
